{"ast":null,"code":"import React,{useState,useEffect}from'react';import'./GameScreen.css';import ASCIIExpl from'./ASCIIExplain';import UnicodeExpl from'./UnicodeExplain';import TaskScroll from'./TaskScroll';import tasks from'./Tasks';import MyPdfViewer from'./MyPdfViewer';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function GameScreen(){const levelBackgrounds={0:require('./pictures/tempel.jpeg'),1:require('./pictures/tempel1.jpeg'),2:require('./pictures/tempel2.jpeg'),3:require('./pictures/tempel3.jpeg'),4:require('./pictures/tempel4.jpeg'),5:require('./pictures/tempel5.jpeg'),6:require('./pictures/tempel6.jpeg'),7:require('./pictures/tempel7.jpeg'),8:require('./pictures/tempel8.jpeg'),9:require('./pictures/tempel9.jpeg'),10:require('./pictures/tempel10.jpeg')};const[currentLevel,setCurrentLevel]=useState(\"0\");const[solution,setSolution]=useState(\"\");const[showAsciiPopup,setShowAsciiPopup]=useState(false);const[showUnicodePopup,setShowUnicodePopup]=useState(false);const[score,setScore]=useState(0);const[message,setMessage]=useState(\"\");const[scoreAnimation,setScoreAnimation]=useState(false);const[backgroundImage,setBackgroundImage]=useState(\"\");const[currentTaskIndex,setCurrentTaskIndex]=useState(0);const[solvedTasks,setSolvedTasks]=useState(Array.from({length:10},()=>[]));const[showGame,setShowGame]=useState(false);const[animationComplete,setAnimationComplete]=useState(false);const levelAsNumber=parseInt(currentLevel,10);const handleTaskClick=index=>{setCurrentTaskIndex(index);};const initializeBackgroundImage=()=>{const initialBackgroundImage=levelBackgrounds[currentLevel];document.body.style.backgroundImage=\"url(\".concat(initialBackgroundImage,\")\");document.body.style.backgroundSize='100% 100%';document.body.style.backgroundRepeat='no-repeat';document.body.style.backgroundPosition='center center';};useEffect(()=>{initializeBackgroundImage();},[]);useEffect(()=>{if(score!==0){setScoreAnimation(true);setTimeout(()=>{setScoreAnimation(false);},1000);}},[score]);useEffect(()=>{const timeoutID=setTimeout(()=>{setShowGame(true);},1000);return()=>clearTimeout(timeoutID);},[]);const TypewriterTaskScroll=_ref=>{let{taskText}=_ref;const[displayedText,setDisplayedText]=useState('');const[currentIndex,setCurrentIndex]=useState(0);useEffect(()=>{if(currentIndex<taskText.length){const timeoutId=setTimeout(()=>{setDisplayedText(prevText=>prevText+taskText[currentIndex]);setCurrentIndex(prevIndex=>prevIndex+1);},50);return()=>clearTimeout(timeoutId);setAnimationComplete(true);}},[currentIndex,taskText]);return/*#__PURE__*/_jsx(TaskScroll,{taskText:displayedText});};const handleLevelClick=level=>{setShowGame(false);setCurrentLevel(level);setCurrentTaskIndex(0);setSolvedTasks(prevSolvedTasks=>{const updatedSolvedTasks=[...prevSolvedTasks];updatedSolvedTasks[level]=[];return updatedSolvedTasks;});setTimeout(()=>{setShowGame(true);},1800);const body=document.querySelector('body');body.style.backgroundImage=\"url(\".concat(levelBackgrounds[level],\")\");setBackgroundImage(\"url(\".concat(levelBackgrounds[level],\")\"));};const handleSubmit=()=>{const currentTask=tasks[currentLevel][currentTaskIndex];if(currentTask.type==='input'){if(!solvedTasks[currentLevel].includes(currentTaskIndex)){if(solution.trim()===currentTask.correctAnswer){setScore(prevScore=>prevScore+10+levelAsNumber);setMessage(\"Richtig! Du hast 10 Punkte für diese Antwort bekommen.\");setSolvedTasks(prevSolvedTasks=>{const updatedSolvedTasks=[...prevSolvedTasks];updatedSolvedTasks[currentLevel]=[...updatedSolvedTasks[currentLevel],currentTaskIndex];return updatedSolvedTasks;});setCurrentTaskIndex(prevIndex=>{if(prevIndex<tasks[currentLevel].length-1){return prevIndex+1;}else{setCurrentLevel(prevLevel=>prevLevel+1);return 0;}});}else{setMessage(\"Leider falsch! Schaue dir noch einmal die Erklärungen an.\");setScore(prevScore=>prevScore>=5?prevScore-1:0);}}else{setMessage(\"Du hast diese Aufgabe bereits gelöst.\");}}setSolution(\"\");};const handleOptionClick=selectedOption=>{const optionElement=document.getElementById(selectedOption);if(optionElement){optionElement.classList.add(\"glowing\");if(!solvedTasks[currentLevel].includes(currentTaskIndex)){setTimeout(()=>{optionElement.classList.remove(\"glowing\");if(selectedOption===tasks[currentLevel][currentTaskIndex].correctAnswer){setScore(prevScore=>prevScore+10+levelAsNumber);setMessage(\"Richtig! Du hast 10 Punkte für diese Antwort bekommen.\");setCurrentTaskIndex(prevIndex=>prevIndex+1);setSolvedTasks(prevSolvedTasks=>{const updatedSolvedTasks=[...prevSolvedTasks];updatedSolvedTasks[currentLevel]=[...updatedSolvedTasks[currentLevel],currentTaskIndex];return updatedSolvedTasks;});if(currentTaskIndex+1===tasks[currentLevel].length){setCurrentLevel(prevLevel=>prevLevel===\"0\"?\"1\":prevLevel+1);setCurrentTaskIndex(0);}}else{setMessage(\"Leider falsch! Schaue dir noch einmal die Erklärungen an.\");setScore(prevScore=>prevScore>=5?prevScore-levelAsNumber-3:0);}setSolution(\"\");},2500);}else{optionElement.classList.remove(\"glowing\");setMessage(\"Du hast diese Aufgabe bereits gelöst.\");}}};return showGame?/*#__PURE__*/_jsxs(\"div\",{className:\"game-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"level-bar\",children:Array.from({length:10},(_,index)=>/*#__PURE__*/_jsx(\"div\",{className:\"level-indicator \".concat(index===currentLevel?'current-level':''),onClick:()=>handleLevelClick(index),children:index+1},index))}),/*#__PURE__*/_jsxs(\"div\",{className:\"button-container\",children:[/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"button\",href:\"Ascii.pdf\",onClick:handleLevelClick,children:\"ASCII Erkl\\xE4rung\"}),/*#__PURE__*/_jsx(\"button\",{className:\"button\",onClick:handleLevelClick,children:\"Unicode Erkl\\xE4rung\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"task-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"task-progress\",children:Array.from({length:tasks[currentLevel].length},(_,index)=>/*#__PURE__*/_jsx(\"div\",{className:\"task-indicator \".concat(index===currentTaskIndex?'current-task':''),onClick:()=>handleTaskClick(index),children:index+1},index))}),/*#__PURE__*/_jsxs(\"div\",{className:\"score-container \".concat(scoreAnimation?'score-animation':''),children:[/*#__PURE__*/_jsx(\"span\",{className:\"score-text\",children:\"Punktestand:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"score-value\",children:score})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"task-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"task-text\",children:[/*#__PURE__*/_jsx(TaskScroll,{taskText:tasks[currentLevel][currentTaskIndex].question}),tasks[currentLevel][currentTaskIndex].type==='multipleChoice'&&/*#__PURE__*/_jsx(\"div\",{className:\"options-container\",children:Object.entries(tasks[currentLevel][currentTaskIndex].options).map(_ref2=>{let[key,value]=_ref2;return/*#__PURE__*/_jsx(\"div\",{id:key,className:\"option\",onClick:()=>handleOptionClick(key),children:\"\".concat(key,\") \").concat(value)},key);})})]}),tasks[currentLevel][currentTaskIndex].type==='input'&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"input-field\",value:solution,onChange:e=>setSolution(e.target.value)}),/*#__PURE__*/_jsx(\"button\",{className:\"buttonSubmit\",onClick:handleSubmit,children:\"Antwort best\\xE4tigen\"})]}),message&&/*#__PURE__*/_jsx(\"div\",{className:\"popup-game\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"popup-game-content\",children:[/*#__PURE__*/_jsx(\"h2\",{children:message}),/*#__PURE__*/_jsx(\"button\",{className:\"button\",onClick:()=>setMessage(\"\"),children:\"Schlie\\xDFen\"})]})})]}),showAsciiPopup&&/*#__PURE__*/_jsx(\"div\",{className:\"popup\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"popup-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"popup-header\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"ASCII Erkl\\xE4rung\"}),/*#__PURE__*/_jsx(\"button\",{className:\"close\",onClick:()=>setShowAsciiPopup(false),children:\"X\"})]}),/*#__PURE__*/_jsx(ASCIIExpl,{}),/*#__PURE__*/_jsx(\"button\",{className:\"button\",onClick:()=>setShowAsciiPopup(false),children:\"Schlie\\xDFen\"})]})}),showUnicodePopup&&/*#__PURE__*/_jsx(\"div\",{className:\"popup\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"popup-content\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Unicode Erkl\\xE4rung\"}),/*#__PURE__*/_jsx(UnicodeExpl,{}),/*#__PURE__*/_jsx(\"button\",{className:\"button\",onClick:()=>setShowUnicodePopup(false),children:\"Schlie\\xDFen\"})]})})]}):null;}export default GameScreen;","map":{"version":3,"names":["React","useState","useEffect","ASCIIExpl","UnicodeExpl","TaskScroll","tasks","MyPdfViewer","jsx","_jsx","jsxs","_jsxs","GameScreen","levelBackgrounds","require","currentLevel","setCurrentLevel","solution","setSolution","showAsciiPopup","setShowAsciiPopup","showUnicodePopup","setShowUnicodePopup","score","setScore","message","setMessage","scoreAnimation","setScoreAnimation","backgroundImage","setBackgroundImage","currentTaskIndex","setCurrentTaskIndex","solvedTasks","setSolvedTasks","Array","from","length","showGame","setShowGame","animationComplete","setAnimationComplete","levelAsNumber","parseInt","handleTaskClick","index","initializeBackgroundImage","initialBackgroundImage","document","body","style","concat","backgroundSize","backgroundRepeat","backgroundPosition","setTimeout","timeoutID","clearTimeout","TypewriterTaskScroll","_ref","taskText","displayedText","setDisplayedText","currentIndex","setCurrentIndex","timeoutId","prevText","prevIndex","handleLevelClick","level","prevSolvedTasks","updatedSolvedTasks","querySelector","handleSubmit","currentTask","type","includes","trim","correctAnswer","prevScore","prevLevel","handleOptionClick","selectedOption","optionElement","getElementById","classList","add","remove","className","children","_","onClick","href","question","Object","entries","options","map","_ref2","key","value","id","onChange","e","target"],"sources":["/Users/igorshkolnik/Desktop/tool/src/GameScreen.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './GameScreen.css';\nimport ASCIIExpl from './ASCIIExplain';\nimport UnicodeExpl from './UnicodeExplain';\nimport TaskScroll from './TaskScroll';\nimport tasks from './Tasks'; \nimport MyPdfViewer from './MyPdfViewer';\n\n\n\nfunction GameScreen() {\n\n  const levelBackgrounds = {\n    0: require('./pictures/tempel.jpeg'),\n    1: require('./pictures/tempel1.jpeg'),\n    2: require('./pictures/tempel2.jpeg'),\n    3: require('./pictures/tempel3.jpeg'),\n    4: require('./pictures/tempel4.jpeg'),\n    5: require('./pictures/tempel5.jpeg'),\n    6: require('./pictures/tempel6.jpeg'),\n    7: require('./pictures/tempel7.jpeg'),\n    8: require('./pictures/tempel8.jpeg'),\n    9: require('./pictures/tempel9.jpeg'),\n    10: require('./pictures/tempel10.jpeg'),\n  };\n\n    const [currentLevel, setCurrentLevel] = useState(\"0\");\n    const [solution, setSolution] = useState(\"\");\n    const [showAsciiPopup, setShowAsciiPopup] = useState(false);\n    const [showUnicodePopup, setShowUnicodePopup] = useState(false);\n    const [score, setScore] = useState(0);\n    const [message, setMessage] = useState(\"\");\n    const [scoreAnimation, setScoreAnimation] = useState(false);\n    const [backgroundImage, setBackgroundImage] = useState(\"\");\n    const [currentTaskIndex, setCurrentTaskIndex] = useState(0);\n    const [solvedTasks, setSolvedTasks] = useState(Array.from({ length: 10 }, () => []));\n    const [showGame, setShowGame] = useState(false);\n    const [animationComplete, setAnimationComplete] = useState(false);\n\n    \n    const levelAsNumber = parseInt(currentLevel, 10);\n\n    const handleTaskClick = (index) => {\n      setCurrentTaskIndex(index);\n    };\n\n    const initializeBackgroundImage = () => {\n      const initialBackgroundImage = levelBackgrounds[currentLevel];\n      document.body.style.backgroundImage = `url(${initialBackgroundImage})`;\n      document.body.style.backgroundSize = '100% 100%';\n      document.body.style.backgroundRepeat = 'no-repeat';\n      document.body.style.backgroundPosition = 'center center';\n    };\n  \n    useEffect(() => {\n      initializeBackgroundImage(); \n    }, []);\n\n      useEffect(() => {\n        if (score !== 0) {\n          setScoreAnimation(true);\n          setTimeout(() => {\n            setScoreAnimation(false);\n          }, 1000); \n        }\n      }, [score]);\n\n      useEffect(() => {\n        const timeoutID = setTimeout(() => {\n          setShowGame(true);\n        }, 1000);\n        return () => clearTimeout(timeoutID);\n      }, []);\n\n\n      const TypewriterTaskScroll = ({ taskText }) => {\n        const [displayedText, setDisplayedText] = useState('');\n        const [currentIndex, setCurrentIndex] = useState(0);\n      \n        useEffect(() => {\n          if (currentIndex < taskText.length) {\n            const timeoutId = setTimeout(() => {\n              setDisplayedText((prevText) => prevText + taskText[currentIndex]);\n              setCurrentIndex((prevIndex) => prevIndex + 1);\n            }, 50);\n      \n            return () => clearTimeout(timeoutId);\n            setAnimationComplete(true);\n          }\n        }, [currentIndex, taskText]);\n      \n        return <TaskScroll taskText={displayedText} />;\n      };\n\n      const handleLevelClick = (level) => {\n      setShowGame(false);\n      setCurrentLevel(level);\n      setCurrentTaskIndex(0);\n      setSolvedTasks((prevSolvedTasks) => {\n        const updatedSolvedTasks = [...prevSolvedTasks];\n        updatedSolvedTasks[level] = [];\n        return updatedSolvedTasks;\n      });\n      setTimeout(() => {\n        setShowGame(true);\n      }, 1800);\n      const body = document.querySelector('body');\n      body.style.backgroundImage = `url(${levelBackgrounds[level]})`;\n      setBackgroundImage(`url(${levelBackgrounds[level]})`);\n      };\n\n\n    const handleSubmit = () => {\n      const currentTask = tasks[currentLevel][currentTaskIndex];\n      if (currentTask.type === 'input') {\n        if (!solvedTasks[currentLevel].includes(currentTaskIndex)) {\n          if (solution.trim() === currentTask.correctAnswer) {\n            setScore((prevScore) => prevScore + 10 + levelAsNumber);\n            setMessage(\"Richtig! Du hast 10 Punkte für diese Antwort bekommen.\");\n            setSolvedTasks((prevSolvedTasks) => {\n              const updatedSolvedTasks = [...prevSolvedTasks];\n              updatedSolvedTasks[currentLevel] = [...updatedSolvedTasks[currentLevel], currentTaskIndex];\n              return updatedSolvedTasks;\n            });\n    \n            setCurrentTaskIndex((prevIndex) => {\n              if (prevIndex < tasks[currentLevel].length - 1) {\n                return prevIndex + 1;\n              } else {\n                setCurrentLevel((prevLevel) => prevLevel + 1);\n                return 0; \n              }\n            });\n          } else {\n            setMessage(\"Leider falsch! Schaue dir noch einmal die Erklärungen an.\");\n            setScore((prevScore) => (prevScore >= 5 ? prevScore - 1 : 0));\n          }\n        } else {\n          setMessage(\"Du hast diese Aufgabe bereits gelöst.\");\n        }\n      }\n      setSolution(\"\");\n    };\n    \n    \n    \n\n    const handleOptionClick = (selectedOption) => {\n      const optionElement = document.getElementById(selectedOption);\n    \n      if (optionElement) {\n        optionElement.classList.add(\"glowing\");\n        if (!solvedTasks[currentLevel].includes(currentTaskIndex)) {\n        setTimeout(() => {\n          optionElement.classList.remove(\"glowing\");\n          if (selectedOption === tasks[currentLevel][currentTaskIndex].correctAnswer) {\n            setScore((prevScore) => prevScore + 10 + levelAsNumber);\n            setMessage(\"Richtig! Du hast 10 Punkte für diese Antwort bekommen.\");\n            setCurrentTaskIndex((prevIndex) => prevIndex + 1);\n            setSolvedTasks((prevSolvedTasks) => {\n              const updatedSolvedTasks = [...prevSolvedTasks];\n              updatedSolvedTasks[currentLevel] = [...updatedSolvedTasks[currentLevel], currentTaskIndex];\n              return updatedSolvedTasks;\n            });\n    \n            if (currentTaskIndex + 1 === tasks[currentLevel].length) {\n              setCurrentLevel((prevLevel) => (prevLevel === \"0\" ? \"1\" : prevLevel +1));\n              setCurrentTaskIndex(0);\n            }\n          } else {\n            setMessage(\"Leider falsch! Schaue dir noch einmal die Erklärungen an.\");\n            setScore((prevScore) => (prevScore >= 5 ? prevScore - levelAsNumber - 3 : 0));\n          }\n    \n          setSolution(\"\");\n        }, 2500);\n      }\n      else {\n        optionElement.classList.remove(\"glowing\");\n        setMessage(\"Du hast diese Aufgabe bereits gelöst.\");\n      }\n    }\n    };\n\n      return showGame ? (\n        <div className=\"game-container\">\n  <div className=\"level-bar\">\n    {Array.from({ length: 10 }, (_, index) => (\n      <div\n        key={index}\n        className={`level-indicator ${index === currentLevel ? 'current-level' : ''}`}\n        onClick={() => handleLevelClick(index)}\n      >\n        {index + 1}\n      </div>\n    ))}\n  </div>\n  <div className=\"button-container\">\n            <button  type=\"button\" className=\"button\" href=\"Ascii.pdf\" onClick={handleLevelClick}>\n              ASCII Erklärung\n            </button>\n            <button className=\"button\" onClick={handleLevelClick}>\n              Unicode Erklärung\n            </button>\n          </div>\n  <div className=\"task-container\">\n    <div className=\"task-progress\">\n      {Array.from({ length: tasks[currentLevel].length }, (_, index) => (\n        <div\n          key={index}\n          className={`task-indicator ${index === currentTaskIndex ? 'current-task' : ''}`}\n          onClick={() => handleTaskClick(index)}\n        >\n          {index + 1}\n        </div>\n      ))}\n      </div>\n       <div className={`score-container ${scoreAnimation ? 'score-animation' : ''}`}>\n              <span className=\"score-text\" >Punktestand:</span>\n              <span className=\"score-value\">{score}</span>\n       </div>\n       </div>\n          <div className=\"task-container\">\n            <div className=\"task-text\">\n              <TaskScroll taskText={tasks[currentLevel][currentTaskIndex].question} />\n              {tasks[currentLevel][currentTaskIndex].type === 'multipleChoice' && (\n                <div className=\"options-container\">\n                  {Object.entries(tasks[currentLevel][currentTaskIndex].options).map(([key, value]) => (\n                    <div key={key} id={key} className=\"option\" onClick={() => handleOptionClick(key)}>\n                      {`${key}) ${value}`}\n                    </div>\n                  ))}\n                </div>\n              )}\n            </div>\n            {tasks[currentLevel][currentTaskIndex].type === 'input' && (\n              <div>\n                <input\n                  type=\"text\"\n                  className=\"input-field\"\n                  value={solution}\n                  onChange={(e) => setSolution(e.target.value)}\n                />\n                <button className=\"buttonSubmit\" onClick={handleSubmit}>\n                Antwort bestätigen\n                </button>\n              </div>\n            )}\n            {message && (\n              <div className=\"popup-game\">\n                <div className=\"popup-game-content\">\n                  <h2>{message}</h2>\n                  <button className=\"button\" onClick={() => setMessage(\"\")}>Schließen</button>\n                </div>\n              </div>\n            )}\n          </div>\n          {showAsciiPopup && (\n            <div className=\"popup\">\n              <div className=\"popup-content\">\n                <div className=\"popup-header\">\n                  <h2>ASCII Erklärung</h2>\n                  <button className=\"close\" onClick={() => setShowAsciiPopup(false)}>\n                    X\n                  </button>\n                </div>\n                <ASCIIExpl />\n                <button className=\"button\" onClick={() => setShowAsciiPopup(false)}>\n                  Schließen\n                </button>\n              </div>\n            </div>\n          )}\n          {showUnicodePopup && (\n            <div className=\"popup\">\n              <div className=\"popup-content\">\n                <h2>Unicode Erklärung</h2>\n                <UnicodeExpl />\n                <button className=\"button\" onClick={() => setShowUnicodePopup(false)}>\n                  Schließen\n                </button>\n              </div>\n            </div>\n          )}\n        </div>\n      ) : null;\n          }      \nexport default GameScreen;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}