{"ast":null,"code":"import React,{useState,useEffect}from'react';import'./GameScreen.css';import ASCIIExpl from'./ASCIIExplain';import UnicodeExpl from'./UnicodeExplain';import TaskScroll from'./TaskScroll';import tasks from'./Tasks';import Modal from'react-modal';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function GameScreen(){const levelBackgrounds={0:require('./pictures/tempel.jpeg'),1:require('./pictures/tempel1.jpeg'),2:require('./pictures/tempel2.jpeg'),3:require('./pictures/tempel3.jpeg'),4:require('./pictures/tempel4.jpeg'),5:require('./pictures/tempel5.jpeg'),6:require('./pictures/tempel6.jpeg'),7:require('./pictures/tempel7.jpeg'),8:require('./pictures/tempel8.jpeg'),9:require('./pictures/tempel9.jpeg'),10:require('./pictures/tempel10.jpeg')};const[currentLevel,setCurrentLevel]=useState(\"0\");const[solution,setSolution]=useState(\"\");const[showAsciiPopup,setShowAsciiPopup]=useState(false);const[showUnicodePopup,setShowUnicodePopup]=useState(false);const[score,setScore]=useState(0);const[message,setMessage]=useState(\"\");const[scoreAnimation,setScoreAnimation]=useState(false);const[backgroundImage,setBackgroundImage]=useState(\"\");const[currentTaskIndex,setCurrentTaskIndex]=useState(0);const[solvedTasks,setSolvedTasks]=useState(Array.from({length:10},()=>[]));const[showGame,setShowGame]=useState(false);const[animationComplete,setAnimationComplete]=useState(false);const[modalIsOpen,setModalIsOpen]=useState(false);const[asciiModalIsOpen,setAsciiModalIsOpen]=useState(false);const[unicodeModalIsOpen,setUnicodeModalIsOpen]=useState(false);const levelAsNumber=parseInt(currentLevel,10);const handleTaskClick=index=>{setCurrentTaskIndex(index);};const initializeBackgroundImage=()=>{const initialBackgroundImage=levelBackgrounds[currentLevel];document.body.style.backgroundImage=\"url(\".concat(initialBackgroundImage,\")\");document.body.style.backgroundSize='100% 100%';document.body.style.backgroundRepeat='no-repeat';document.body.style.backgroundPosition='center center';};useEffect(()=>{initializeBackgroundImage();},[]);useEffect(()=>{if(score!==0){setScoreAnimation(true);setTimeout(()=>{setScoreAnimation(false);},1000);}},[score]);useEffect(()=>{const timeoutID=setTimeout(()=>{setShowGame(true);},1000);return()=>clearTimeout(timeoutID);},[]);const openModal=()=>{setModalIsOpen(true);};const closeModal=()=>{setModalIsOpen(false);};const AsciiModal=_ref=>{let{isOpen,closeModal}=_ref;return/*#__PURE__*/_jsx(Modal,{isOpen:isOpen,onRequestClose:closeModal,contentLabel:\"ASCII Erkl\\xE4rung\",style:{content:{display:'flex',flexDirection:'column',alignItems:'center',justifyContent:'center'}},children:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"button\",{className:\"ModalButton\",onClick:closeModal,children:\"Schlie\\xDFen\"}),/*#__PURE__*/_jsx(ASCIIExpl,{})]})});};const UnicodeModal=_ref2=>{let{isOpen,closeModal}=_ref2;return/*#__PURE__*/_jsx(Modal,{isOpen:isOpen,onRequestClose:closeModal,contentLabel:\"Unicode Erkl\\xE4rung\",style:{content:{display:'flex',flexDirection:'column',alignItems:'center',justifyContent:'center'}},children:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"button\",{className:\"ModalButton\",onClick:closeModal,children:\"Schlie\\xDFen\"}),/*#__PURE__*/_jsx(UnicodeExpl,{})]})});};const openAsciiModal=()=>setAsciiModalIsOpen(true);const closeAsciiModal=()=>setAsciiModalIsOpen(false);const openUnicodeModal=()=>setUnicodeModalIsOpen(true);const closeUnicodeModal=()=>setUnicodeModalIsOpen(false);const TypewriterTaskScroll=_ref3=>{let{taskText}=_ref3;const[displayedText,setDisplayedText]=useState('');const[currentIndex,setCurrentIndex]=useState(0);useEffect(()=>{if(currentIndex<taskText.length){const timeoutId=setTimeout(()=>{setDisplayedText(prevText=>prevText+taskText[currentIndex]);setCurrentIndex(prevIndex=>prevIndex+1);},50);return()=>clearTimeout(timeoutId);setAnimationComplete(true);}},[currentIndex,taskText]);return/*#__PURE__*/_jsx(TaskScroll,{taskText:displayedText});};const handleLevelClick=level=>{setShowGame(false);setCurrentLevel(level);setCurrentTaskIndex(0);setSolvedTasks(prevSolvedTasks=>{const updatedSolvedTasks=[...prevSolvedTasks];updatedSolvedTasks[level]=[];return updatedSolvedTasks;});setTimeout(()=>{setShowGame(true);},1800);const body=document.querySelector('body');body.style.backgroundImage=\"url(\".concat(levelBackgrounds[level],\")\");setBackgroundImage(\"url(\".concat(levelBackgrounds[level],\")\"));};const handleSubmit=()=>{const currentTask=tasks[currentLevel][currentTaskIndex];if(currentTask.type==='input'){if(!solvedTasks[currentLevel].includes(currentTaskIndex)){if(solution.trim()===currentTask.correctAnswer){setScore(prevScore=>prevScore+10+levelAsNumber);setMessage(\"Richtig! Du hast 10 Punkte für diese Antwort bekommen.\");setSolvedTasks(prevSolvedTasks=>{const updatedSolvedTasks=[...prevSolvedTasks];updatedSolvedTasks[currentLevel]=[...updatedSolvedTasks[currentLevel],currentTaskIndex];return updatedSolvedTasks;});setCurrentTaskIndex(prevIndex=>{if(prevIndex<tasks[currentLevel].length-1){return prevIndex+1;}else{setCurrentLevel(prevLevel=>prevLevel+1);return 0;}});}else{setMessage(\"Leider falsch! Schaue dir noch einmal die Erklärungen an.\");setScore(prevScore=>prevScore>=5?prevScore-1:0);}}else{setMessage(\"Du hast diese Aufgabe bereits gelöst.\");}}setSolution(\"\");};const handleOptionClick=selectedOption=>{const optionElement=document.getElementById(selectedOption);if(optionElement){optionElement.classList.add(\"glowing\");if(!solvedTasks[currentLevel].includes(currentTaskIndex)){setTimeout(()=>{optionElement.classList.remove(\"glowing\");if(selectedOption===tasks[currentLevel][currentTaskIndex].correctAnswer){setScore(prevScore=>prevScore+10+levelAsNumber);setMessage(\"Richtig! Du hast 10 Punkte für diese Antwort bekommen.\");setCurrentTaskIndex(prevIndex=>prevIndex+1);setSolvedTasks(prevSolvedTasks=>{const updatedSolvedTasks=[...prevSolvedTasks];updatedSolvedTasks[currentLevel]=[...updatedSolvedTasks[currentLevel],currentTaskIndex];return updatedSolvedTasks;});if(currentTaskIndex+1===tasks[currentLevel].length){setCurrentLevel(prevLevel=>prevLevel===\"0\"?\"1\":prevLevel+1);setCurrentTaskIndex(0);}}else{setMessage(\"Leider falsch! Schaue dir noch einmal die Erklärungen an.\");setScore(prevScore=>prevScore>=5?prevScore-levelAsNumber-3:0);}setSolution(\"\");},2500);}else{optionElement.classList.remove(\"glowing\");setMessage(\"Du hast diese Aufgabe bereits gelöst.\");}}};return showGame?/*#__PURE__*/_jsxs(\"div\",{className:\"game-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"level-bar\",children:Array.from({length:10},(_,index)=>/*#__PURE__*/_jsx(\"div\",{className:\"level-indicator \".concat(index===currentLevel?'current-level':''),onClick:()=>handleLevelClick(index),children:index+1},index))}),/*#__PURE__*/_jsxs(\"div\",{className:\"button-container\",children:[/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"button\",onClick:openAsciiModal,children:\"ASCII Erkl\\xE4rung\"}),/*#__PURE__*/_jsx(AsciiModal,{isOpen:asciiModalIsOpen,closeModal:closeAsciiModal}),/*#__PURE__*/_jsx(\"button\",{className:\"button\",onClick:openUnicodeModal,children:\"Unicode Erkl\\xE4rung\"}),/*#__PURE__*/_jsx(UnicodeModal,{isOpen:unicodeModalIsOpen,closeModal:closeUnicodeModal})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"task-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"task-progress\",children:Array.from({length:tasks[currentLevel].length},(_,index)=>/*#__PURE__*/_jsx(\"div\",{className:\"task-indicator \".concat(index===currentTaskIndex?'current-task':''),onClick:()=>handleTaskClick(index),children:index+1},index))}),/*#__PURE__*/_jsxs(\"div\",{className:\"score-container \".concat(scoreAnimation?'score-animation':''),children:[/*#__PURE__*/_jsx(\"span\",{className:\"score-text\",children:\"Punktestand:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"score-value\",children:score})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"task-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"task-text\",children:[/*#__PURE__*/_jsx(TaskScroll,{taskText:tasks[currentLevel][currentTaskIndex].question}),tasks[currentLevel][currentTaskIndex].type==='multipleChoice'&&/*#__PURE__*/_jsx(\"div\",{className:\"options-container\",children:Object.entries(tasks[currentLevel][currentTaskIndex].options).map(_ref4=>{let[key,value]=_ref4;return/*#__PURE__*/_jsx(\"div\",{id:key,className:\"option\",onClick:()=>handleOptionClick(key),children:\"\".concat(key,\") \").concat(value)},key);})})]}),tasks[currentLevel][currentTaskIndex].type==='input'&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"input-field\",value:solution,onChange:e=>setSolution(e.target.value)}),/*#__PURE__*/_jsx(\"button\",{className:\"buttonSubmit\",onClick:handleSubmit,children:\"Antwort best\\xE4tigen\"})]}),message&&/*#__PURE__*/_jsx(\"div\",{className:\"popup-game\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"popup-game-content\",children:[/*#__PURE__*/_jsx(\"h2\",{children:message}),/*#__PURE__*/_jsx(\"button\",{className:\"button\",onClick:()=>setMessage(\"\"),children:\"Schlie\\xDFen\"})]})})]})]}):null;}export default GameScreen;","map":{"version":3,"names":["React","useState","useEffect","ASCIIExpl","UnicodeExpl","TaskScroll","tasks","Modal","jsx","_jsx","jsxs","_jsxs","GameScreen","levelBackgrounds","require","currentLevel","setCurrentLevel","solution","setSolution","showAsciiPopup","setShowAsciiPopup","showUnicodePopup","setShowUnicodePopup","score","setScore","message","setMessage","scoreAnimation","setScoreAnimation","backgroundImage","setBackgroundImage","currentTaskIndex","setCurrentTaskIndex","solvedTasks","setSolvedTasks","Array","from","length","showGame","setShowGame","animationComplete","setAnimationComplete","modalIsOpen","setModalIsOpen","asciiModalIsOpen","setAsciiModalIsOpen","unicodeModalIsOpen","setUnicodeModalIsOpen","levelAsNumber","parseInt","handleTaskClick","index","initializeBackgroundImage","initialBackgroundImage","document","body","style","concat","backgroundSize","backgroundRepeat","backgroundPosition","setTimeout","timeoutID","clearTimeout","openModal","closeModal","AsciiModal","_ref","isOpen","onRequestClose","contentLabel","content","display","flexDirection","alignItems","justifyContent","children","className","onClick","UnicodeModal","_ref2","openAsciiModal","closeAsciiModal","openUnicodeModal","closeUnicodeModal","TypewriterTaskScroll","_ref3","taskText","displayedText","setDisplayedText","currentIndex","setCurrentIndex","timeoutId","prevText","prevIndex","handleLevelClick","level","prevSolvedTasks","updatedSolvedTasks","querySelector","handleSubmit","currentTask","type","includes","trim","correctAnswer","prevScore","prevLevel","handleOptionClick","selectedOption","optionElement","getElementById","classList","add","remove","_","question","Object","entries","options","map","_ref4","key","value","id","onChange","e","target"],"sources":["/Users/igorshkolnik/Desktop/tool/src/GameScreen.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './GameScreen.css';\nimport ASCIIExpl from './ASCIIExplain';\nimport UnicodeExpl from './UnicodeExplain';\nimport TaskScroll from './TaskScroll';\nimport tasks from './Tasks'; \nimport Modal from 'react-modal';\n\n\n\nfunction GameScreen() {\n\n  const levelBackgrounds = {\n    0: require('./pictures/tempel.jpeg'),\n    1: require('./pictures/tempel1.jpeg'),\n    2: require('./pictures/tempel2.jpeg'),\n    3: require('./pictures/tempel3.jpeg'),\n    4: require('./pictures/tempel4.jpeg'),\n    5: require('./pictures/tempel5.jpeg'),\n    6: require('./pictures/tempel6.jpeg'),\n    7: require('./pictures/tempel7.jpeg'),\n    8: require('./pictures/tempel8.jpeg'),\n    9: require('./pictures/tempel9.jpeg'),\n    10: require('./pictures/tempel10.jpeg'),\n  };\n\n    const [currentLevel, setCurrentLevel] = useState(\"0\");\n    const [solution, setSolution] = useState(\"\");\n    const [showAsciiPopup, setShowAsciiPopup] = useState(false);\n    const [showUnicodePopup, setShowUnicodePopup] = useState(false);\n    const [score, setScore] = useState(0);\n    const [message, setMessage] = useState(\"\");\n    const [scoreAnimation, setScoreAnimation] = useState(false);\n    const [backgroundImage, setBackgroundImage] = useState(\"\");\n    const [currentTaskIndex, setCurrentTaskIndex] = useState(0);\n    const [solvedTasks, setSolvedTasks] = useState(Array.from({ length: 10 }, () => []));\n    const [showGame, setShowGame] = useState(false);\n    const [animationComplete, setAnimationComplete] = useState(false);\n    const [modalIsOpen, setModalIsOpen] = useState(false);\n    const [asciiModalIsOpen, setAsciiModalIsOpen] = useState(false);\n    const [unicodeModalIsOpen, setUnicodeModalIsOpen] = useState(false);\n\n    \n    const levelAsNumber = parseInt(currentLevel, 10);\n\n    const handleTaskClick = (index) => {\n      setCurrentTaskIndex(index);\n    };\n\n    const initializeBackgroundImage = () => {\n      const initialBackgroundImage = levelBackgrounds[currentLevel];\n      document.body.style.backgroundImage = `url(${initialBackgroundImage})`;\n      document.body.style.backgroundSize = '100% 100%';\n      document.body.style.backgroundRepeat = 'no-repeat';\n      document.body.style.backgroundPosition = 'center center';\n    };\n  \n    useEffect(() => {\n      initializeBackgroundImage(); \n    }, []);\n\n\n\n      useEffect(() => {\n        if (score !== 0) {\n          setScoreAnimation(true);\n          setTimeout(() => {\n            setScoreAnimation(false);\n          }, 1000); \n        }\n      }, [score]);\n\n      useEffect(() => {\n        const timeoutID = setTimeout(() => {\n          setShowGame(true);\n        }, 1000);\n        return () => clearTimeout(timeoutID);\n      }, []);\n\n      const openModal = () => {\n        setModalIsOpen(true);\n      }\n    \n      const closeModal = () => {\n        setModalIsOpen(false);\n      }\n\n      const AsciiModal = ({ isOpen, closeModal }) => (\n        <Modal\n          isOpen={isOpen}\n          onRequestClose={closeModal}\n          contentLabel=\"ASCII Erklärung\"\n          style={{\n            content: {\n              display: 'flex',\n              flexDirection: 'column',\n              alignItems: 'center',\n              justifyContent: 'center',\n            },\n          }}\n        >\n          <div>\n            <button className=\"ModalButton\" onClick={closeModal}>Schließen</button>\n            <ASCIIExpl/>\n          </div>\n        </Modal>\n      );\n\n      const UnicodeModal = ({ isOpen, closeModal }) => (\n        <Modal\n          isOpen={isOpen}\n          onRequestClose={closeModal}\n          contentLabel=\"Unicode Erklärung\"\n          style={{\n            content: {\n              display: 'flex',\n              flexDirection: 'column',\n              alignItems: 'center',\n              justifyContent: 'center',\n            },\n          }}\n        >\n          <div>\n            <button className=\"ModalButton\" onClick={closeModal}>Schließen</button>\n            <UnicodeExpl/>\n          </div>\n        </Modal>\n      );\n\n      const openAsciiModal = () => setAsciiModalIsOpen(true);\n      const closeAsciiModal = () => setAsciiModalIsOpen(false);\n      const openUnicodeModal = () => setUnicodeModalIsOpen(true);\n      const closeUnicodeModal = () => setUnicodeModalIsOpen(false);\n\n      const TypewriterTaskScroll = ({ taskText }) => {\n        const [displayedText, setDisplayedText] = useState('');\n        const [currentIndex, setCurrentIndex] = useState(0);\n      \n        useEffect(() => {\n          if (currentIndex < taskText.length) {\n            const timeoutId = setTimeout(() => {\n              setDisplayedText((prevText) => prevText + taskText[currentIndex]);\n              setCurrentIndex((prevIndex) => prevIndex + 1);\n            }, 50);\n      \n            return () => clearTimeout(timeoutId);\n            setAnimationComplete(true);\n          }\n        }, [currentIndex, taskText]);\n      \n        return <TaskScroll taskText={displayedText} />;\n      };\n\n      const handleLevelClick = (level) => {\n      setShowGame(false);\n      setCurrentLevel(level);\n      setCurrentTaskIndex(0);\n      setSolvedTasks((prevSolvedTasks) => {\n        const updatedSolvedTasks = [...prevSolvedTasks];\n        updatedSolvedTasks[level] = [];\n        return updatedSolvedTasks;\n      });\n      setTimeout(() => {\n        setShowGame(true);\n      }, 1800);\n      const body = document.querySelector('body');\n      body.style.backgroundImage = `url(${levelBackgrounds[level]})`;\n      setBackgroundImage(`url(${levelBackgrounds[level]})`);\n      };\n\n\n    const handleSubmit = () => {\n      const currentTask = tasks[currentLevel][currentTaskIndex];\n      if (currentTask.type === 'input') {\n        if (!solvedTasks[currentLevel].includes(currentTaskIndex)) {\n          if (solution.trim() === currentTask.correctAnswer) {\n            setScore((prevScore) => prevScore + 10 + levelAsNumber);\n            setMessage(\"Richtig! Du hast 10 Punkte für diese Antwort bekommen.\");\n            setSolvedTasks((prevSolvedTasks) => {\n              const updatedSolvedTasks = [...prevSolvedTasks];\n              updatedSolvedTasks[currentLevel] = [...updatedSolvedTasks[currentLevel], currentTaskIndex];\n              return updatedSolvedTasks;\n            });\n    \n            setCurrentTaskIndex((prevIndex) => {\n              if (prevIndex < tasks[currentLevel].length - 1) {\n                return prevIndex + 1;\n              } else {\n                setCurrentLevel((prevLevel) => prevLevel + 1);\n                return 0; \n              }\n            });\n          } else {\n            setMessage(\"Leider falsch! Schaue dir noch einmal die Erklärungen an.\");\n            setScore((prevScore) => (prevScore >= 5 ? prevScore - 1 : 0));\n          }\n        } else {\n          setMessage(\"Du hast diese Aufgabe bereits gelöst.\");\n        }\n      }\n      setSolution(\"\");\n    };\n    \n    \n    \n\n    const handleOptionClick = (selectedOption) => {\n      const optionElement = document.getElementById(selectedOption);\n    \n      if (optionElement) {\n        optionElement.classList.add(\"glowing\");\n        if (!solvedTasks[currentLevel].includes(currentTaskIndex)) {\n        setTimeout(() => {\n          optionElement.classList.remove(\"glowing\");\n          if (selectedOption === tasks[currentLevel][currentTaskIndex].correctAnswer) {\n            setScore((prevScore) => prevScore + 10 + levelAsNumber);\n            setMessage(\"Richtig! Du hast 10 Punkte für diese Antwort bekommen.\");\n            setCurrentTaskIndex((prevIndex) => prevIndex + 1);\n            setSolvedTasks((prevSolvedTasks) => {\n              const updatedSolvedTasks = [...prevSolvedTasks];\n              updatedSolvedTasks[currentLevel] = [...updatedSolvedTasks[currentLevel], currentTaskIndex];\n              return updatedSolvedTasks;\n            });\n    \n            if (currentTaskIndex + 1 === tasks[currentLevel].length) {\n              setCurrentLevel((prevLevel) => (prevLevel === \"0\" ? \"1\" : prevLevel +1));\n              setCurrentTaskIndex(0);\n            }\n          } else {\n            setMessage(\"Leider falsch! Schaue dir noch einmal die Erklärungen an.\");\n            setScore((prevScore) => (prevScore >= 5 ? prevScore - levelAsNumber - 3 : 0));\n          }\n    \n          setSolution(\"\");\n        }, 2500);\n      }\n      else {\n        optionElement.classList.remove(\"glowing\");\n        setMessage(\"Du hast diese Aufgabe bereits gelöst.\");\n      }\n    }\n    };\n\n      return showGame ? (\n        <div className=\"game-container\">\n  <div className=\"level-bar\">\n    {Array.from({ length: 10 }, (_, index) => (\n      <div\n        key={index}\n        className={`level-indicator ${index === currentLevel ? 'current-level' : ''}`}\n        onClick={() => handleLevelClick(index)}\n      >\n        {index + 1}\n      </div>\n    ))}\n  </div>\n  <div className=\"button-container\">\n            <button  type=\"button\" className=\"button\" onClick={openAsciiModal}>\n              ASCII Erklärung\n            </button>\n            <AsciiModal isOpen={asciiModalIsOpen} closeModal={closeAsciiModal} />\n            <button className=\"button\" onClick={openUnicodeModal}>\n              Unicode Erklärung\n            </button>\n            <UnicodeModal isOpen={unicodeModalIsOpen} closeModal={closeUnicodeModal} />\n          </div>\n  <div className=\"task-container\">\n    <div className=\"task-progress\">\n      {Array.from({ length: tasks[currentLevel].length }, (_, index) => (\n        <div\n          key={index}\n          className={`task-indicator ${index === currentTaskIndex ? 'current-task' : ''}`}\n          onClick={() => handleTaskClick(index)}\n        >\n          {index + 1}\n        </div>\n      ))}\n      </div>\n       <div className={`score-container ${scoreAnimation ? 'score-animation' : ''}`}>\n              <span className=\"score-text\" >Punktestand:</span>\n              <span className=\"score-value\">{score}</span>\n       </div>\n       </div>\n          <div className=\"task-container\">\n            <div className=\"task-text\">\n              <TaskScroll taskText={tasks[currentLevel][currentTaskIndex].question} />\n              {tasks[currentLevel][currentTaskIndex].type === 'multipleChoice' && (\n                <div className=\"options-container\">\n                  {Object.entries(tasks[currentLevel][currentTaskIndex].options).map(([key, value]) => (\n                    <div key={key} id={key} className=\"option\" onClick={() => handleOptionClick(key)}>\n                      {`${key}) ${value}`}\n                    </div>\n                  ))}\n                </div>\n              )}\n            </div>\n            {tasks[currentLevel][currentTaskIndex].type === 'input' && (\n              <div>\n                <input\n                  type=\"text\"\n                  className=\"input-field\"\n                  value={solution}\n                  onChange={(e) => setSolution(e.target.value)}\n                />\n                <button className=\"buttonSubmit\" onClick={handleSubmit}>\n                Antwort bestätigen\n                </button>\n              </div>\n            )}\n            {message && (\n              <div className=\"popup-game\">\n                <div className=\"popup-game-content\">\n                  <h2>{message}</h2>\n                  <button className=\"button\" onClick={() => setMessage(\"\")}>Schließen</button>\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n      ) : null;\n          }      \nexport default GameScreen;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,MAAO,kBAAkB,CACzB,MAAO,CAAAC,SAAS,KAAM,gBAAgB,CACtC,MAAO,CAAAC,WAAW,KAAM,kBAAkB,CAC1C,MAAO,CAAAC,UAAU,KAAM,cAAc,CACrC,MAAO,CAAAC,KAAK,KAAM,SAAS,CAC3B,MAAO,CAAAC,KAAK,KAAM,aAAa,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAIhC,QAAS,CAAAC,UAAUA,CAAA,CAAG,CAEpB,KAAM,CAAAC,gBAAgB,CAAG,CACvB,CAAC,CAAEC,OAAO,CAAC,wBAAwB,CAAC,CACpC,CAAC,CAAEA,OAAO,CAAC,yBAAyB,CAAC,CACrC,CAAC,CAAEA,OAAO,CAAC,yBAAyB,CAAC,CACrC,CAAC,CAAEA,OAAO,CAAC,yBAAyB,CAAC,CACrC,CAAC,CAAEA,OAAO,CAAC,yBAAyB,CAAC,CACrC,CAAC,CAAEA,OAAO,CAAC,yBAAyB,CAAC,CACrC,CAAC,CAAEA,OAAO,CAAC,yBAAyB,CAAC,CACrC,CAAC,CAAEA,OAAO,CAAC,yBAAyB,CAAC,CACrC,CAAC,CAAEA,OAAO,CAAC,yBAAyB,CAAC,CACrC,CAAC,CAAEA,OAAO,CAAC,yBAAyB,CAAC,CACrC,EAAE,CAAEA,OAAO,CAAC,0BAA0B,CACxC,CAAC,CAEC,KAAM,CAACC,YAAY,CAAEC,eAAe,CAAC,CAAGf,QAAQ,CAAC,GAAG,CAAC,CACrD,KAAM,CAACgB,QAAQ,CAAEC,WAAW,CAAC,CAAGjB,QAAQ,CAAC,EAAE,CAAC,CAC5C,KAAM,CAACkB,cAAc,CAAEC,iBAAiB,CAAC,CAAGnB,QAAQ,CAAC,KAAK,CAAC,CAC3D,KAAM,CAACoB,gBAAgB,CAAEC,mBAAmB,CAAC,CAAGrB,QAAQ,CAAC,KAAK,CAAC,CAC/D,KAAM,CAACsB,KAAK,CAAEC,QAAQ,CAAC,CAAGvB,QAAQ,CAAC,CAAC,CAAC,CACrC,KAAM,CAACwB,OAAO,CAAEC,UAAU,CAAC,CAAGzB,QAAQ,CAAC,EAAE,CAAC,CAC1C,KAAM,CAAC0B,cAAc,CAAEC,iBAAiB,CAAC,CAAG3B,QAAQ,CAAC,KAAK,CAAC,CAC3D,KAAM,CAAC4B,eAAe,CAAEC,kBAAkB,CAAC,CAAG7B,QAAQ,CAAC,EAAE,CAAC,CAC1D,KAAM,CAAC8B,gBAAgB,CAAEC,mBAAmB,CAAC,CAAG/B,QAAQ,CAAC,CAAC,CAAC,CAC3D,KAAM,CAACgC,WAAW,CAAEC,cAAc,CAAC,CAAGjC,QAAQ,CAACkC,KAAK,CAACC,IAAI,CAAC,CAAEC,MAAM,CAAE,EAAG,CAAC,CAAE,IAAM,EAAE,CAAC,CAAC,CACpF,KAAM,CAACC,QAAQ,CAAEC,WAAW,CAAC,CAAGtC,QAAQ,CAAC,KAAK,CAAC,CAC/C,KAAM,CAACuC,iBAAiB,CAAEC,oBAAoB,CAAC,CAAGxC,QAAQ,CAAC,KAAK,CAAC,CACjE,KAAM,CAACyC,WAAW,CAAEC,cAAc,CAAC,CAAG1C,QAAQ,CAAC,KAAK,CAAC,CACrD,KAAM,CAAC2C,gBAAgB,CAAEC,mBAAmB,CAAC,CAAG5C,QAAQ,CAAC,KAAK,CAAC,CAC/D,KAAM,CAAC6C,kBAAkB,CAAEC,qBAAqB,CAAC,CAAG9C,QAAQ,CAAC,KAAK,CAAC,CAGnE,KAAM,CAAA+C,aAAa,CAAGC,QAAQ,CAAClC,YAAY,CAAE,EAAE,CAAC,CAEhD,KAAM,CAAAmC,eAAe,CAAIC,KAAK,EAAK,CACjCnB,mBAAmB,CAACmB,KAAK,CAAC,CAC5B,CAAC,CAED,KAAM,CAAAC,yBAAyB,CAAGA,CAAA,GAAM,CACtC,KAAM,CAAAC,sBAAsB,CAAGxC,gBAAgB,CAACE,YAAY,CAAC,CAC7DuC,QAAQ,CAACC,IAAI,CAACC,KAAK,CAAC3B,eAAe,QAAA4B,MAAA,CAAUJ,sBAAsB,KAAG,CACtEC,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACE,cAAc,CAAG,WAAW,CAChDJ,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACG,gBAAgB,CAAG,WAAW,CAClDL,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACI,kBAAkB,CAAG,eAAe,CAC1D,CAAC,CAED1D,SAAS,CAAC,IAAM,CACdkD,yBAAyB,CAAC,CAAC,CAC7B,CAAC,CAAE,EAAE,CAAC,CAIJlD,SAAS,CAAC,IAAM,CACd,GAAIqB,KAAK,GAAK,CAAC,CAAE,CACfK,iBAAiB,CAAC,IAAI,CAAC,CACvBiC,UAAU,CAAC,IAAM,CACfjC,iBAAiB,CAAC,KAAK,CAAC,CAC1B,CAAC,CAAE,IAAI,CAAC,CACV,CACF,CAAC,CAAE,CAACL,KAAK,CAAC,CAAC,CAEXrB,SAAS,CAAC,IAAM,CACd,KAAM,CAAA4D,SAAS,CAAGD,UAAU,CAAC,IAAM,CACjCtB,WAAW,CAAC,IAAI,CAAC,CACnB,CAAC,CAAE,IAAI,CAAC,CACR,MAAO,IAAMwB,YAAY,CAACD,SAAS,CAAC,CACtC,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAE,SAAS,CAAGA,CAAA,GAAM,CACtBrB,cAAc,CAAC,IAAI,CAAC,CACtB,CAAC,CAED,KAAM,CAAAsB,UAAU,CAAGA,CAAA,GAAM,CACvBtB,cAAc,CAAC,KAAK,CAAC,CACvB,CAAC,CAED,KAAM,CAAAuB,UAAU,CAAGC,IAAA,MAAC,CAAEC,MAAM,CAAEH,UAAW,CAAC,CAAAE,IAAA,oBACxC1D,IAAA,CAACF,KAAK,EACJ6D,MAAM,CAAEA,MAAO,CACfC,cAAc,CAAEJ,UAAW,CAC3BK,YAAY,CAAC,oBAAiB,CAC9Bd,KAAK,CAAE,CACLe,OAAO,CAAE,CACPC,OAAO,CAAE,MAAM,CACfC,aAAa,CAAE,QAAQ,CACvBC,UAAU,CAAE,QAAQ,CACpBC,cAAc,CAAE,QAClB,CACF,CAAE,CAAAC,QAAA,cAEFjE,KAAA,QAAAiE,QAAA,eACEnE,IAAA,WAAQoE,SAAS,CAAC,aAAa,CAACC,OAAO,CAAEb,UAAW,CAAAW,QAAA,CAAC,cAAS,CAAQ,CAAC,cACvEnE,IAAA,CAACN,SAAS,GAAC,CAAC,EACT,CAAC,CACD,CAAC,EACT,CAED,KAAM,CAAA4E,YAAY,CAAGC,KAAA,MAAC,CAAEZ,MAAM,CAAEH,UAAW,CAAC,CAAAe,KAAA,oBAC1CvE,IAAA,CAACF,KAAK,EACJ6D,MAAM,CAAEA,MAAO,CACfC,cAAc,CAAEJ,UAAW,CAC3BK,YAAY,CAAC,sBAAmB,CAChCd,KAAK,CAAE,CACLe,OAAO,CAAE,CACPC,OAAO,CAAE,MAAM,CACfC,aAAa,CAAE,QAAQ,CACvBC,UAAU,CAAE,QAAQ,CACpBC,cAAc,CAAE,QAClB,CACF,CAAE,CAAAC,QAAA,cAEFjE,KAAA,QAAAiE,QAAA,eACEnE,IAAA,WAAQoE,SAAS,CAAC,aAAa,CAACC,OAAO,CAAEb,UAAW,CAAAW,QAAA,CAAC,cAAS,CAAQ,CAAC,cACvEnE,IAAA,CAACL,WAAW,GAAC,CAAC,EACX,CAAC,CACD,CAAC,EACT,CAED,KAAM,CAAA6E,cAAc,CAAGA,CAAA,GAAMpC,mBAAmB,CAAC,IAAI,CAAC,CACtD,KAAM,CAAAqC,eAAe,CAAGA,CAAA,GAAMrC,mBAAmB,CAAC,KAAK,CAAC,CACxD,KAAM,CAAAsC,gBAAgB,CAAGA,CAAA,GAAMpC,qBAAqB,CAAC,IAAI,CAAC,CAC1D,KAAM,CAAAqC,iBAAiB,CAAGA,CAAA,GAAMrC,qBAAqB,CAAC,KAAK,CAAC,CAE5D,KAAM,CAAAsC,oBAAoB,CAAGC,KAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,KAAA,CACxC,KAAM,CAACE,aAAa,CAAEC,gBAAgB,CAAC,CAAGxF,QAAQ,CAAC,EAAE,CAAC,CACtD,KAAM,CAACyF,YAAY,CAAEC,eAAe,CAAC,CAAG1F,QAAQ,CAAC,CAAC,CAAC,CAEnDC,SAAS,CAAC,IAAM,CACd,GAAIwF,YAAY,CAAGH,QAAQ,CAAClD,MAAM,CAAE,CAClC,KAAM,CAAAuD,SAAS,CAAG/B,UAAU,CAAC,IAAM,CACjC4B,gBAAgB,CAAEI,QAAQ,EAAKA,QAAQ,CAAGN,QAAQ,CAACG,YAAY,CAAC,CAAC,CACjEC,eAAe,CAAEG,SAAS,EAAKA,SAAS,CAAG,CAAC,CAAC,CAC/C,CAAC,CAAE,EAAE,CAAC,CAEN,MAAO,IAAM/B,YAAY,CAAC6B,SAAS,CAAC,CACpCnD,oBAAoB,CAAC,IAAI,CAAC,CAC5B,CACF,CAAC,CAAE,CAACiD,YAAY,CAAEH,QAAQ,CAAC,CAAC,CAE5B,mBAAO9E,IAAA,CAACJ,UAAU,EAACkF,QAAQ,CAAEC,aAAc,CAAE,CAAC,CAChD,CAAC,CAED,KAAM,CAAAO,gBAAgB,CAAIC,KAAK,EAAK,CACpCzD,WAAW,CAAC,KAAK,CAAC,CAClBvB,eAAe,CAACgF,KAAK,CAAC,CACtBhE,mBAAmB,CAAC,CAAC,CAAC,CACtBE,cAAc,CAAE+D,eAAe,EAAK,CAClC,KAAM,CAAAC,kBAAkB,CAAG,CAAC,GAAGD,eAAe,CAAC,CAC/CC,kBAAkB,CAACF,KAAK,CAAC,CAAG,EAAE,CAC9B,MAAO,CAAAE,kBAAkB,CAC3B,CAAC,CAAC,CACFrC,UAAU,CAAC,IAAM,CACftB,WAAW,CAAC,IAAI,CAAC,CACnB,CAAC,CAAE,IAAI,CAAC,CACR,KAAM,CAAAgB,IAAI,CAAGD,QAAQ,CAAC6C,aAAa,CAAC,MAAM,CAAC,CAC3C5C,IAAI,CAACC,KAAK,CAAC3B,eAAe,QAAA4B,MAAA,CAAU5C,gBAAgB,CAACmF,KAAK,CAAC,KAAG,CAC9DlE,kBAAkB,QAAA2B,MAAA,CAAQ5C,gBAAgB,CAACmF,KAAK,CAAC,KAAG,CAAC,CACrD,CAAC,CAGH,KAAM,CAAAI,YAAY,CAAGA,CAAA,GAAM,CACzB,KAAM,CAAAC,WAAW,CAAG/F,KAAK,CAACS,YAAY,CAAC,CAACgB,gBAAgB,CAAC,CACzD,GAAIsE,WAAW,CAACC,IAAI,GAAK,OAAO,CAAE,CAChC,GAAI,CAACrE,WAAW,CAAClB,YAAY,CAAC,CAACwF,QAAQ,CAACxE,gBAAgB,CAAC,CAAE,CACzD,GAAId,QAAQ,CAACuF,IAAI,CAAC,CAAC,GAAKH,WAAW,CAACI,aAAa,CAAE,CACjDjF,QAAQ,CAAEkF,SAAS,EAAKA,SAAS,CAAG,EAAE,CAAG1D,aAAa,CAAC,CACvDtB,UAAU,CAAC,wDAAwD,CAAC,CACpEQ,cAAc,CAAE+D,eAAe,EAAK,CAClC,KAAM,CAAAC,kBAAkB,CAAG,CAAC,GAAGD,eAAe,CAAC,CAC/CC,kBAAkB,CAACnF,YAAY,CAAC,CAAG,CAAC,GAAGmF,kBAAkB,CAACnF,YAAY,CAAC,CAAEgB,gBAAgB,CAAC,CAC1F,MAAO,CAAAmE,kBAAkB,CAC3B,CAAC,CAAC,CAEFlE,mBAAmB,CAAE8D,SAAS,EAAK,CACjC,GAAIA,SAAS,CAAGxF,KAAK,CAACS,YAAY,CAAC,CAACsB,MAAM,CAAG,CAAC,CAAE,CAC9C,MAAO,CAAAyD,SAAS,CAAG,CAAC,CACtB,CAAC,IAAM,CACL9E,eAAe,CAAE2F,SAAS,EAAKA,SAAS,CAAG,CAAC,CAAC,CAC7C,MAAO,EAAC,CACV,CACF,CAAC,CAAC,CACJ,CAAC,IAAM,CACLjF,UAAU,CAAC,2DAA2D,CAAC,CACvEF,QAAQ,CAAEkF,SAAS,EAAMA,SAAS,EAAI,CAAC,CAAGA,SAAS,CAAG,CAAC,CAAG,CAAE,CAAC,CAC/D,CACF,CAAC,IAAM,CACLhF,UAAU,CAAC,uCAAuC,CAAC,CACrD,CACF,CACAR,WAAW,CAAC,EAAE,CAAC,CACjB,CAAC,CAKD,KAAM,CAAA0F,iBAAiB,CAAIC,cAAc,EAAK,CAC5C,KAAM,CAAAC,aAAa,CAAGxD,QAAQ,CAACyD,cAAc,CAACF,cAAc,CAAC,CAE7D,GAAIC,aAAa,CAAE,CACjBA,aAAa,CAACE,SAAS,CAACC,GAAG,CAAC,SAAS,CAAC,CACtC,GAAI,CAAChF,WAAW,CAAClB,YAAY,CAAC,CAACwF,QAAQ,CAACxE,gBAAgB,CAAC,CAAE,CAC3D8B,UAAU,CAAC,IAAM,CACfiD,aAAa,CAACE,SAAS,CAACE,MAAM,CAAC,SAAS,CAAC,CACzC,GAAIL,cAAc,GAAKvG,KAAK,CAACS,YAAY,CAAC,CAACgB,gBAAgB,CAAC,CAAC0E,aAAa,CAAE,CAC1EjF,QAAQ,CAAEkF,SAAS,EAAKA,SAAS,CAAG,EAAE,CAAG1D,aAAa,CAAC,CACvDtB,UAAU,CAAC,wDAAwD,CAAC,CACpEM,mBAAmB,CAAE8D,SAAS,EAAKA,SAAS,CAAG,CAAC,CAAC,CACjD5D,cAAc,CAAE+D,eAAe,EAAK,CAClC,KAAM,CAAAC,kBAAkB,CAAG,CAAC,GAAGD,eAAe,CAAC,CAC/CC,kBAAkB,CAACnF,YAAY,CAAC,CAAG,CAAC,GAAGmF,kBAAkB,CAACnF,YAAY,CAAC,CAAEgB,gBAAgB,CAAC,CAC1F,MAAO,CAAAmE,kBAAkB,CAC3B,CAAC,CAAC,CAEF,GAAInE,gBAAgB,CAAG,CAAC,GAAKzB,KAAK,CAACS,YAAY,CAAC,CAACsB,MAAM,CAAE,CACvDrB,eAAe,CAAE2F,SAAS,EAAMA,SAAS,GAAK,GAAG,CAAG,GAAG,CAAGA,SAAS,CAAE,CAAE,CAAC,CACxE3E,mBAAmB,CAAC,CAAC,CAAC,CACxB,CACF,CAAC,IAAM,CACLN,UAAU,CAAC,2DAA2D,CAAC,CACvEF,QAAQ,CAAEkF,SAAS,EAAMA,SAAS,EAAI,CAAC,CAAGA,SAAS,CAAG1D,aAAa,CAAG,CAAC,CAAG,CAAE,CAAC,CAC/E,CAEA9B,WAAW,CAAC,EAAE,CAAC,CACjB,CAAC,CAAE,IAAI,CAAC,CACV,CAAC,IACI,CACH4F,aAAa,CAACE,SAAS,CAACE,MAAM,CAAC,SAAS,CAAC,CACzCxF,UAAU,CAAC,uCAAuC,CAAC,CACrD,CACF,CACA,CAAC,CAEC,MAAO,CAAAY,QAAQ,cACb3B,KAAA,QAAKkE,SAAS,CAAC,gBAAgB,CAAAD,QAAA,eACrCnE,IAAA,QAAKoE,SAAS,CAAC,WAAW,CAAAD,QAAA,CACvBzC,KAAK,CAACC,IAAI,CAAC,CAAEC,MAAM,CAAE,EAAG,CAAC,CAAE,CAAC8E,CAAC,CAAEhE,KAAK,gBACnC1C,IAAA,QAEEoE,SAAS,oBAAApB,MAAA,CAAqBN,KAAK,GAAKpC,YAAY,CAAG,eAAe,CAAG,EAAE,CAAG,CAC9E+D,OAAO,CAAEA,CAAA,GAAMiB,gBAAgB,CAAC5C,KAAK,CAAE,CAAAyB,QAAA,CAEtCzB,KAAK,CAAG,CAAC,EAJLA,KAKF,CACN,CAAC,CACC,CAAC,cACNxC,KAAA,QAAKkE,SAAS,CAAC,kBAAkB,CAAAD,QAAA,eACvBnE,IAAA,WAAS6F,IAAI,CAAC,QAAQ,CAACzB,SAAS,CAAC,QAAQ,CAACC,OAAO,CAAEG,cAAe,CAAAL,QAAA,CAAC,oBAEnE,CAAQ,CAAC,cACTnE,IAAA,CAACyD,UAAU,EAACE,MAAM,CAAExB,gBAAiB,CAACqB,UAAU,CAAEiB,eAAgB,CAAE,CAAC,cACrEzE,IAAA,WAAQoE,SAAS,CAAC,QAAQ,CAACC,OAAO,CAAEK,gBAAiB,CAAAP,QAAA,CAAC,sBAEtD,CAAQ,CAAC,cACTnE,IAAA,CAACsE,YAAY,EAACX,MAAM,CAAEtB,kBAAmB,CAACmB,UAAU,CAAEmB,iBAAkB,CAAE,CAAC,EACxE,CAAC,cACdzE,KAAA,QAAKkE,SAAS,CAAC,gBAAgB,CAAAD,QAAA,eAC7BnE,IAAA,QAAKoE,SAAS,CAAC,eAAe,CAAAD,QAAA,CAC3BzC,KAAK,CAACC,IAAI,CAAC,CAAEC,MAAM,CAAE/B,KAAK,CAACS,YAAY,CAAC,CAACsB,MAAO,CAAC,CAAE,CAAC8E,CAAC,CAAEhE,KAAK,gBAC3D1C,IAAA,QAEEoE,SAAS,mBAAApB,MAAA,CAAoBN,KAAK,GAAKpB,gBAAgB,CAAG,cAAc,CAAG,EAAE,CAAG,CAChF+C,OAAO,CAAEA,CAAA,GAAM5B,eAAe,CAACC,KAAK,CAAE,CAAAyB,QAAA,CAErCzB,KAAK,CAAG,CAAC,EAJLA,KAKF,CACN,CAAC,CACG,CAAC,cACLxC,KAAA,QAAKkE,SAAS,oBAAApB,MAAA,CAAqB9B,cAAc,CAAG,iBAAiB,CAAG,EAAE,CAAG,CAAAiD,QAAA,eACtEnE,IAAA,SAAMoE,SAAS,CAAC,YAAY,CAAAD,QAAA,CAAE,cAAY,CAAM,CAAC,cACjDnE,IAAA,SAAMoE,SAAS,CAAC,aAAa,CAAAD,QAAA,CAAErD,KAAK,CAAO,CAAC,EAC9C,CAAC,EACD,CAAC,cACHZ,KAAA,QAAKkE,SAAS,CAAC,gBAAgB,CAAAD,QAAA,eAC7BjE,KAAA,QAAKkE,SAAS,CAAC,WAAW,CAAAD,QAAA,eACxBnE,IAAA,CAACJ,UAAU,EAACkF,QAAQ,CAAEjF,KAAK,CAACS,YAAY,CAAC,CAACgB,gBAAgB,CAAC,CAACqF,QAAS,CAAE,CAAC,CACvE9G,KAAK,CAACS,YAAY,CAAC,CAACgB,gBAAgB,CAAC,CAACuE,IAAI,GAAK,gBAAgB,eAC9D7F,IAAA,QAAKoE,SAAS,CAAC,mBAAmB,CAAAD,QAAA,CAC/ByC,MAAM,CAACC,OAAO,CAAChH,KAAK,CAACS,YAAY,CAAC,CAACgB,gBAAgB,CAAC,CAACwF,OAAO,CAAC,CAACC,GAAG,CAACC,KAAA,MAAC,CAACC,GAAG,CAAEC,KAAK,CAAC,CAAAF,KAAA,oBAC9EhH,IAAA,QAAemH,EAAE,CAAEF,GAAI,CAAC7C,SAAS,CAAC,QAAQ,CAACC,OAAO,CAAEA,CAAA,GAAM8B,iBAAiB,CAACc,GAAG,CAAE,CAAA9C,QAAA,IAAAnB,MAAA,CAC3EiE,GAAG,OAAAjE,MAAA,CAAKkE,KAAK,GADTD,GAEL,CAAC,EACP,CAAC,CACC,CACN,EACE,CAAC,CACLpH,KAAK,CAACS,YAAY,CAAC,CAACgB,gBAAgB,CAAC,CAACuE,IAAI,GAAK,OAAO,eACrD3F,KAAA,QAAAiE,QAAA,eACEnE,IAAA,UACE6F,IAAI,CAAC,MAAM,CACXzB,SAAS,CAAC,aAAa,CACvB8C,KAAK,CAAE1G,QAAS,CAChB4G,QAAQ,CAAGC,CAAC,EAAK5G,WAAW,CAAC4G,CAAC,CAACC,MAAM,CAACJ,KAAK,CAAE,CAC9C,CAAC,cACFlH,IAAA,WAAQoE,SAAS,CAAC,cAAc,CAACC,OAAO,CAAEsB,YAAa,CAAAxB,QAAA,CAAC,uBAExD,CAAQ,CAAC,EACN,CACN,CACAnD,OAAO,eACNhB,IAAA,QAAKoE,SAAS,CAAC,YAAY,CAAAD,QAAA,cACzBjE,KAAA,QAAKkE,SAAS,CAAC,oBAAoB,CAAAD,QAAA,eACjCnE,IAAA,OAAAmE,QAAA,CAAKnD,OAAO,CAAK,CAAC,cAClBhB,IAAA,WAAQoE,SAAS,CAAC,QAAQ,CAACC,OAAO,CAAEA,CAAA,GAAMpD,UAAU,CAAC,EAAE,CAAE,CAAAkD,QAAA,CAAC,cAAS,CAAQ,CAAC,EACzE,CAAC,CACH,CACN,EACE,CAAC,EACH,CAAC,CACJ,IAAI,CACJ,CACV,cAAe,CAAAhE,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}