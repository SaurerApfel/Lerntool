{"ast":null,"code":"var _jsxFileName = \"/Users/igorshkolnik/Desktop/tool/src/GameScreen.js\",\n  _s2 = $RefreshSig$();\n// Hauptkomponente, zuständig für den Spielablauf\nimport React, { useState, useEffect } from 'react';\nimport './GameScreen.css';\nimport ASCIIExpl from './ASCIIExplain';\nimport UnicodeExpl from './UnicodeExplain';\nimport TaskScroll from './TaskScroll';\nimport tasks from './Tasks';\nimport Modal from 'react-modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GameScreen() {\n  _s2();\n  var _s = $RefreshSig$();\n  const levelBackgrounds = {\n    0: require('./pictures/tempel.jpeg'),\n    1: require('./pictures/tempel1.jpeg'),\n    2: require('./pictures/tempel2.jpeg'),\n    3: require('./pictures/tempel3.jpeg'),\n    4: require('./pictures/tempel4.jpeg'),\n    5: require('./pictures/tempel5.jpeg'),\n    6: require('./pictures/tempel6.jpeg'),\n    7: require('./pictures/tempel7.jpeg'),\n    8: require('./pictures/tempel8.jpeg'),\n    9: require('./pictures/tempel9.jpeg'),\n    10: require('./pictures/tempel10.jpeg')\n  };\n  const [currentLevel, setCurrentLevel] = useState(\"0\");\n  const [solution, setSolution] = useState(\"\");\n  const [score, setScore] = useState(0);\n  const [message, setMessage] = useState(\"\");\n  const [scoreAnimation, setScoreAnimation] = useState(false);\n  const [backgroundImage, setBackgroundImage] = useState(\"\");\n  const [currentTaskIndex, setCurrentTaskIndex] = useState(0);\n  const [solvedTasks, setSolvedTasks] = useState(Array.from({\n    length: 10\n  }, () => []));\n  const [animationComplete, setAnimationComplete] = useState(false);\n  const [asciiModalIsOpen, setAsciiModalIsOpen] = useState(false);\n  const [unicodeModalIsOpen, setUnicodeModalIsOpen] = useState(false);\n  const [resultModalIsOpen, setResultModalIsOpen] = useState(false);\n  const levelAsNumber = parseInt(currentLevel, 10);\n  const handleTaskClick = index => {\n    setCurrentTaskIndex(index);\n  };\n  const initializeBackgroundImage = () => {\n    const initialBackgroundImage = levelBackgrounds[currentLevel];\n    document.body.style.backgroundImage = `url(${initialBackgroundImage})`;\n    document.body.style.backgroundSize = '100% 100%';\n    document.body.style.backgroundRepeat = 'no-repeat';\n    document.body.style.backgroundPosition = 'center center';\n  };\n  useEffect(() => {\n    initializeBackgroundImage();\n  }, []);\n  useEffect(() => {\n    if (score !== 0) {\n      setScoreAnimation(true);\n      setTimeout(() => {\n        setScoreAnimation(false);\n      }, 1000);\n    }\n  }, [score]);\n  useEffect(() => {\n    const timeoutID = setTimeout(() => {\n      setShowGame(true);\n    }, 1000);\n    return () => clearTimeout(timeoutID);\n  }, []);\n  const AsciiModal = ({\n    isOpen,\n    closeModal\n  }) => /*#__PURE__*/_jsxDEV(Modal, {\n    isOpen: isOpen,\n    onRequestClose: closeModal,\n    contentLabel: \"ASCII Erkl\\xE4rung\",\n    ariaHideApp: false,\n    style: {\n      content: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center'\n      }\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"ModalButton\",\n        onClick: closeModal,\n        children: \"Schlie\\xDFen\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(ASCIIExpl, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 9\n  }, this);\n  const UnicodeModal = ({\n    isOpen,\n    closeModal\n  }) => /*#__PURE__*/_jsxDEV(Modal, {\n    isOpen: isOpen,\n    onRequestClose: closeModal,\n    contentLabel: \"Unicode Erkl\\xE4rung\",\n    ariaHideApp: false,\n    style: {\n      content: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center'\n      }\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"ModalButton\",\n        onClick: closeModal,\n        children: \"Schlie\\xDFen\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(UnicodeExpl, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 9\n  }, this);\n  const openAsciiModal = () => setAsciiModalIsOpen(true);\n  const closeAsciiModal = () => setAsciiModalIsOpen(false);\n  const openUnicodeModal = () => setUnicodeModalIsOpen(true);\n  const closeUnicodeModal = () => setUnicodeModalIsOpen(false);\n  const openResultModal = () => setResultModalIsOpen(true);\n  const closeResultModal = () => setResultModalIsOpen(false);\n  const TypewriterTaskScroll = ({\n    taskText\n  }) => {\n    _s();\n    const [displayedText, setDisplayedText] = useState('');\n    const [currentIndex, setCurrentIndex] = useState(0);\n    useEffect(() => {\n      if (currentIndex < taskText.length) {\n        const timeoutId = setTimeout(() => {\n          setDisplayedText(prevText => prevText + taskText[currentIndex]);\n          setCurrentIndex(prevIndex => prevIndex + 1);\n        }, 50);\n        return () => clearTimeout(timeoutId);\n        setAnimationComplete(true);\n      }\n    }, [currentIndex, taskText]);\n    return /*#__PURE__*/_jsxDEV(TaskScroll, {\n      taskText: displayedText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 16\n    }, this);\n  };\n  _s(TypewriterTaskScroll, \"4p+UW4yKA08vspvaIMFg+MJxO3w=\");\n  const handleLevelClick = level => {\n    setShowGame(false);\n    setCurrentLevel(level);\n    setCurrentTaskIndex(0);\n    setSolvedTasks(prevSolvedTasks => {\n      const updatedSolvedTasks = [...prevSolvedTasks];\n      updatedSolvedTasks[level] = [];\n      return updatedSolvedTasks;\n    });\n    setTimeout(() => {\n      setShowGame(true);\n    }, 1800);\n    const body = document.querySelector('body');\n    body.style.backgroundImage = `url(${levelBackgrounds[level]})`;\n    setBackgroundImage(`url(${levelBackgrounds[level]})`);\n  };\n  const handleSubmit = () => {\n    const currentTask = tasks[currentLevel][currentTaskIndex];\n    if (currentTask.type === 'input') {\n      if (!solvedTasks[currentLevel].includes(currentTaskIndex)) {\n        if (solution.trim() === currentTask.correctAnswer) {\n          setScore(prevScore => {\n            const newScore = prevScore + 10 + levelAsNumber;\n            setMessage(`Richtig! Du hast ${10 + levelAsNumber} Punkte für diese Antwort bekommen. Dein aktueller Punktestand: ${newScore}`);\n            return newScore;\n          });\n          setSolvedTasks(prevSolvedTasks => {\n            const updatedSolvedTasks = [...prevSolvedTasks];\n            updatedSolvedTasks[currentLevel] = [...updatedSolvedTasks[currentLevel], currentTaskIndex];\n            return updatedSolvedTasks;\n          });\n          setCurrentTaskIndex(prevIndex => {\n            if (prevIndex < tasks[currentLevel].length - 1) {\n              return prevIndex + 1;\n            } else {\n              const isLastLevel = currentLevel === tasks.length - 1;\n              const areAllTasksSolved = AllTasksSolved();\n              if (isLastLevel && areAllTasksSolved) {\n                openResultModal();\n              } else if (isLastLevel && !areAllTasksSolved) {\n                setMessage(\"Richtig! Du hast 10 Punkte für diese Antwort bekommen, aber du hast noch nicht alle Aufgaben gelöst. Gehe zurück zu den Aufgaben, die du noch nicht gelöst hast.\");\n              } else {\n                setCurrentLevel(prevLevel => prevLevel + 1);\n                return 0;\n              }\n            }\n          });\n        } else {\n          setMessage(\"Leider falsch. Schaue dir noch einmal die Erklärungen an.\");\n          setScore(prevScore => prevScore >= 5 ? prevScore - 1 : 0);\n        }\n      } else {\n        setMessage(\"Du hast diese Aufgabe bereits gelöst.\");\n      }\n    }\n    setSolution(\"\");\n  };\n  const AllTasksSolved = () => {\n    const totalTasks = tasks.flat().length;\n    const totalSolvedTasks = solvedTasks.flat().length;\n    return totalSolvedTasks === totalTasks;\n  };\n  const handleOptionClick = selectedOption => {\n    const optionElement = document.getElementById(selectedOption);\n    if (optionElement) {\n      optionElement.classList.add(\"glowing\");\n      if (!solvedTasks[currentLevel].includes(currentTaskIndex)) {\n        setTimeout(() => {\n          optionElement.classList.remove(\"glowing\");\n          if (selectedOption === tasks[currentLevel][currentTaskIndex].correctAnswer) {\n            setScore(prevScore => {\n              const newScore = prevScore + 10 + levelAsNumber;\n              setMessage(`Richtig! Du hast ${10 + levelAsNumber} Punkte für diese Antwort bekommen. Dein aktueller Punktestand: ${newScore}`);\n              return newScore;\n            });\n            setCurrentTaskIndex(prevIndex => prevIndex + 1);\n            setSolvedTasks(prevSolvedTasks => {\n              const updatedSolvedTasks = [...prevSolvedTasks];\n              updatedSolvedTasks[currentLevel] = [...updatedSolvedTasks[currentLevel], currentTaskIndex];\n              return updatedSolvedTasks;\n            });\n            if (currentTaskIndex + 1 === tasks[currentLevel].length) {\n              setCurrentLevel(prevLevel => prevLevel === \"0\" ? \"1\" : prevLevel + 1);\n              setCurrentTaskIndex(0);\n            }\n          } else {\n            setMessage(\"Leider falsch! Schaue dir noch einmal die Erklärungen an.\");\n            setScore(prevScore => prevScore >= 5 ? prevScore - levelAsNumber - 3 : 0);\n          }\n          setSolution(\"\");\n        }, 2500);\n      } else {\n        optionElement.classList.remove(\"glowing\");\n        setMessage(\"Du hast diese Aufgabe bereits gelöst.\");\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"level-bar\",\n      children: Array.from({\n        length: 10\n      }, (_, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `level-indicator ${index === currentLevel ? 'current-level' : ''}`,\n        onClick: () => handleLevelClick(index),\n        children: index + 1\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 7\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"button\",\n        onClick: openAsciiModal,\n        children: \"ASCII Erkl\\xE4rung\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(AsciiModal, {\n        isOpen: asciiModalIsOpen,\n        closeModal: closeAsciiModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        onClick: openUnicodeModal,\n        children: \"Unicode Erkl\\xE4rung\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(UnicodeModal, {\n        isOpen: unicodeModalIsOpen,\n        closeModal: closeUnicodeModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-progress\",\n        children: Array.from({\n          length: tasks[currentLevel].length\n        }, (_, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `task-indicator ${index === currentTaskIndex ? 'current-task' : ''}`,\n          onClick: () => handleTaskClick(index),\n          children: index + 1\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 9\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `score-container ${scoreAnimation ? 'score-animation' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"score-text\",\n          children: \"Punktestand:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"score-value\",\n          children: score\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-text\",\n        children: [/*#__PURE__*/_jsxDEV(TaskScroll, {\n          taskText: tasks[currentLevel][currentTaskIndex].question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 15\n        }, this), tasks[currentLevel][currentTaskIndex].type === 'multipleChoice' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"options-container\",\n          children: Object.entries(tasks[currentLevel][currentTaskIndex].options).map(([key, value]) => /*#__PURE__*/_jsxDEV(\"div\", {\n            id: key,\n            className: \"option\",\n            onClick: () => handleOptionClick(key),\n            children: `${key}) ${value}`\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 21\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 13\n      }, this), tasks[currentLevel][currentTaskIndex].type === 'input' && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"input-field\",\n          value: solution,\n          onChange: e => setSolution(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"buttonSubmit\",\n          onClick: handleSubmit,\n          children: \"Antwort best\\xE4tigen\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 15\n      }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup-game\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"popup-game-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button\",\n            onClick: () => setMessage(\"\"),\n            children: \"Schlie\\xDFen\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 264,\n    columnNumber: 7\n  }, this);\n}\n_s2(GameScreen, \"/iRtCayGj9NP+NHiPmUzMPgkeyk=\");\n_c = GameScreen;\nexport default GameScreen;\nvar _c;\n$RefreshReg$(_c, \"GameScreen\");","map":{"version":3,"names":["React","useState","useEffect","ASCIIExpl","UnicodeExpl","TaskScroll","tasks","Modal","jsxDEV","_jsxDEV","GameScreen","_s2","_s","$RefreshSig$","levelBackgrounds","require","currentLevel","setCurrentLevel","solution","setSolution","score","setScore","message","setMessage","scoreAnimation","setScoreAnimation","backgroundImage","setBackgroundImage","currentTaskIndex","setCurrentTaskIndex","solvedTasks","setSolvedTasks","Array","from","length","animationComplete","setAnimationComplete","asciiModalIsOpen","setAsciiModalIsOpen","unicodeModalIsOpen","setUnicodeModalIsOpen","resultModalIsOpen","setResultModalIsOpen","levelAsNumber","parseInt","handleTaskClick","index","initializeBackgroundImage","initialBackgroundImage","document","body","style","backgroundSize","backgroundRepeat","backgroundPosition","setTimeout","timeoutID","setShowGame","clearTimeout","AsciiModal","isOpen","closeModal","onRequestClose","contentLabel","ariaHideApp","content","display","flexDirection","alignItems","justifyContent","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","UnicodeModal","openAsciiModal","closeAsciiModal","openUnicodeModal","closeUnicodeModal","openResultModal","closeResultModal","TypewriterTaskScroll","taskText","displayedText","setDisplayedText","currentIndex","setCurrentIndex","timeoutId","prevText","prevIndex","handleLevelClick","level","prevSolvedTasks","updatedSolvedTasks","querySelector","handleSubmit","currentTask","type","includes","trim","correctAnswer","prevScore","newScore","isLastLevel","areAllTasksSolved","AllTasksSolved","prevLevel","totalTasks","flat","totalSolvedTasks","handleOptionClick","selectedOption","optionElement","getElementById","classList","add","remove","_","question","Object","entries","options","map","key","value","id","onChange","e","target","_c","$RefreshReg$"],"sources":["/Users/igorshkolnik/Desktop/tool/src/GameScreen.js"],"sourcesContent":["// Hauptkomponente, zuständig für den Spielablauf\nimport React, { useState, useEffect } from 'react';\nimport './GameScreen.css';\nimport ASCIIExpl from './ASCIIExplain';\nimport UnicodeExpl from './UnicodeExplain';\nimport TaskScroll from './TaskScroll';\nimport tasks from './Tasks'; \nimport Modal from 'react-modal';\n\n\n\nfunction GameScreen() {\n\n  const levelBackgrounds = {\n    0: require('./pictures/tempel.jpeg'),\n    1: require('./pictures/tempel1.jpeg'),\n    2: require('./pictures/tempel2.jpeg'),\n    3: require('./pictures/tempel3.jpeg'),\n    4: require('./pictures/tempel4.jpeg'),\n    5: require('./pictures/tempel5.jpeg'),\n    6: require('./pictures/tempel6.jpeg'),\n    7: require('./pictures/tempel7.jpeg'),\n    8: require('./pictures/tempel8.jpeg'),\n    9: require('./pictures/tempel9.jpeg'),\n    10: require('./pictures/tempel10.jpeg'),\n  };\n\n    const [currentLevel, setCurrentLevel] = useState(\"0\");\n    const [solution, setSolution] = useState(\"\");\n    const [score, setScore] = useState(0);\n    const [message, setMessage] = useState(\"\");\n    const [scoreAnimation, setScoreAnimation] = useState(false);\n    const [backgroundImage, setBackgroundImage] = useState(\"\");\n    const [currentTaskIndex, setCurrentTaskIndex] = useState(0);\n    const [solvedTasks, setSolvedTasks] = useState(Array.from({ length: 10 }, () => []));\n    const [animationComplete, setAnimationComplete] = useState(false);\n    const [asciiModalIsOpen, setAsciiModalIsOpen] = useState(false);\n    const [unicodeModalIsOpen, setUnicodeModalIsOpen] = useState(false);\n    const [resultModalIsOpen, setResultModalIsOpen] = useState(false);\n\n    \n    const levelAsNumber = parseInt(currentLevel, 10);\n\n    const handleTaskClick = (index) => {\n      setCurrentTaskIndex(index);\n    };\n\n    const initializeBackgroundImage = () => {\n      const initialBackgroundImage = levelBackgrounds[currentLevel];\n      document.body.style.backgroundImage = `url(${initialBackgroundImage})`;\n      document.body.style.backgroundSize = '100% 100%';\n      document.body.style.backgroundRepeat = 'no-repeat';\n      document.body.style.backgroundPosition = 'center center';\n    };\n  \n    useEffect(() => {\n      initializeBackgroundImage(); \n    }, []);\n\n\n\n      useEffect(() => {\n        if (score !== 0) {\n          setScoreAnimation(true);\n          setTimeout(() => {\n            setScoreAnimation(false);\n          }, 1000); \n        }\n      }, [score]);\n\n      useEffect(() => {\n        const timeoutID = setTimeout(() => {\n          setShowGame(true);\n        }, 1000);\n        return () => clearTimeout(timeoutID);\n      }, []);\n\n  \n\n      const AsciiModal = ({ isOpen, closeModal }) => (\n        <Modal\n          isOpen={isOpen}\n          onRequestClose={closeModal}\n          contentLabel=\"ASCII Erklärung\"\n          ariaHideApp={false}\n          style={{\n            content: {\n              display: 'flex',\n              flexDirection: 'column',\n              alignItems: 'center',\n              justifyContent: 'center',\n            },\n          }}\n        >\n          <div>\n            <button className=\"ModalButton\" onClick={closeModal}>Schließen</button>\n            <ASCIIExpl/>\n          </div>\n        </Modal>\n      );\n\n      const UnicodeModal = ({ isOpen, closeModal }) => (\n        <Modal\n          isOpen={isOpen}\n          onRequestClose={closeModal}\n          contentLabel=\"Unicode Erklärung\"\n          ariaHideApp={false}\n          style={{\n            content: {\n              display: 'flex',\n              flexDirection: 'column',\n              alignItems: 'center',\n              justifyContent: 'center',\n            },\n          }}\n        >\n          <div>\n            <button className=\"ModalButton\" onClick={closeModal}>Schließen</button>\n            <UnicodeExpl/>\n          </div>\n        </Modal>\n      );\n\n      const openAsciiModal = () => setAsciiModalIsOpen(true);\n      const closeAsciiModal = () => setAsciiModalIsOpen(false);\n      const openUnicodeModal = () => setUnicodeModalIsOpen(true);\n      const closeUnicodeModal = () => setUnicodeModalIsOpen(false);\n\n      const openResultModal = () => setResultModalIsOpen(true);\n      const closeResultModal = () => setResultModalIsOpen(false);\n\n      const TypewriterTaskScroll = ({ taskText }) => {\n        const [displayedText, setDisplayedText] = useState('');\n        const [currentIndex, setCurrentIndex] = useState(0);\n      \n        useEffect(() => {\n          if (currentIndex < taskText.length) {\n            const timeoutId = setTimeout(() => {\n              setDisplayedText((prevText) => prevText + taskText[currentIndex]);\n              setCurrentIndex((prevIndex) => prevIndex + 1);\n            }, 50);\n      \n            return () => clearTimeout(timeoutId);\n            setAnimationComplete(true);\n          }\n        }, [currentIndex, taskText]);\n      \n        return <TaskScroll taskText={displayedText} />;\n      };\n\n      const handleLevelClick = (level) => {\n      setShowGame(false);\n      setCurrentLevel(level);\n      setCurrentTaskIndex(0);\n      setSolvedTasks((prevSolvedTasks) => {\n        const updatedSolvedTasks = [...prevSolvedTasks];\n        updatedSolvedTasks[level] = [];\n        return updatedSolvedTasks;\n      });\n      setTimeout(() => {\n        setShowGame(true);\n      }, 1800);\n      const body = document.querySelector('body');\n      body.style.backgroundImage = `url(${levelBackgrounds[level]})`;\n      setBackgroundImage(`url(${levelBackgrounds[level]})`);\n      };\n\n\n    const handleSubmit = () => {\n      const currentTask = tasks[currentLevel][currentTaskIndex];\n      if (currentTask.type === 'input') {\n        if (!solvedTasks[currentLevel].includes(currentTaskIndex)) {\n          if (solution.trim() === currentTask.correctAnswer) {\n            setScore((prevScore) => {\n              const newScore = prevScore + 10 + levelAsNumber;\n              setMessage(`Richtig! Du hast ${10 + levelAsNumber} Punkte für diese Antwort bekommen. Dein aktueller Punktestand: ${newScore}`);\n              return newScore;\n            });\n            setSolvedTasks((prevSolvedTasks) => {\n              const updatedSolvedTasks = [...prevSolvedTasks];\n              updatedSolvedTasks[currentLevel] = [...updatedSolvedTasks[currentLevel], currentTaskIndex];\n              return updatedSolvedTasks;\n            });\n    \n            setCurrentTaskIndex((prevIndex) => {\n              if (prevIndex < tasks[currentLevel].length - 1) {\n                return prevIndex + 1;\n              } else {\n                const isLastLevel = currentLevel === tasks.length - 1;\n                const areAllTasksSolved = AllTasksSolved();\n\n                if (isLastLevel && areAllTasksSolved) {\n                  openResultModal();\n                }\n                else if (isLastLevel && !areAllTasksSolved) {\n                  setMessage(\"Richtig! Du hast 10 Punkte für diese Antwort bekommen, aber du hast noch nicht alle Aufgaben gelöst. Gehe zurück zu den Aufgaben, die du noch nicht gelöst hast.\")\n                }\n                else {\n                setCurrentLevel((prevLevel) => prevLevel + 1);\n                return 0; \n              }\n            }\n            });\n          } else {\n            setMessage(\"Leider falsch. Schaue dir noch einmal die Erklärungen an.\");\n            setScore((prevScore) => (prevScore >= 5 ? prevScore - 1 : 0));\n          }\n        } else {\n          setMessage(\"Du hast diese Aufgabe bereits gelöst.\");\n        }\n      }\n      setSolution(\"\");\n    };\n    \n    \n    const AllTasksSolved = () => {\n      const totalTasks = tasks.flat().length;\n      const totalSolvedTasks = solvedTasks.flat().length;\n      return totalSolvedTasks === totalTasks;\n    };\n\n    const handleOptionClick = (selectedOption) => {\n      const optionElement = document.getElementById(selectedOption);\n    \n      if (optionElement) {\n        optionElement.classList.add(\"glowing\");\n        if (!solvedTasks[currentLevel].includes(currentTaskIndex)) {\n        setTimeout(() => {\n          optionElement.classList.remove(\"glowing\");\n          if (selectedOption === tasks[currentLevel][currentTaskIndex].correctAnswer) {\n            setScore((prevScore) => {\n            const newScore = prevScore + 10 + levelAsNumber;\n            setMessage(`Richtig! Du hast ${10 + levelAsNumber} Punkte für diese Antwort bekommen. Dein aktueller Punktestand: ${newScore}`);\n            return newScore;\n          });\n            setCurrentTaskIndex((prevIndex) => prevIndex + 1);\n            setSolvedTasks((prevSolvedTasks) => {\n              const updatedSolvedTasks = [...prevSolvedTasks];\n              updatedSolvedTasks[currentLevel] = [...updatedSolvedTasks[currentLevel], currentTaskIndex];\n              return updatedSolvedTasks;\n            });\n    \n            if (currentTaskIndex + 1 === tasks[currentLevel].length) {\n              setCurrentLevel((prevLevel) => (prevLevel === \"0\" ? \"1\" : prevLevel +1));\n              setCurrentTaskIndex(0);\n            }\n          } else {\n            setMessage(\"Leider falsch! Schaue dir noch einmal die Erklärungen an.\");\n            setScore((prevScore) => (prevScore >= 5 ? prevScore - levelAsNumber - 3 : 0));\n          }\n    \n          setSolution(\"\");\n        }, 2500);\n      }\n      else {\n        optionElement.classList.remove(\"glowing\");\n        setMessage(\"Du hast diese Aufgabe bereits gelöst.\");\n      }\n    }\n    };\n\n\n      return (\n      <div className=\"game-container\">\n      <div className=\"level-bar\">\n        {Array.from({ length: 10 }, (_, index) => (\n      <div\n        key={index}\n        className={`level-indicator ${index === currentLevel ? 'current-level' : ''}`}\n        onClick={() => handleLevelClick(index)}\n      >\n        {index + 1}\n      </div>\n      ))}\n      </div>\n      <div className=\"button-container\">\n            <button  type=\"button\" className=\"button\" onClick={openAsciiModal}>\n              ASCII Erklärung\n            </button>\n            <AsciiModal isOpen={asciiModalIsOpen} closeModal={closeAsciiModal} />\n            <button className=\"button\" onClick={openUnicodeModal}>\n              Unicode Erklärung\n            </button>\n            <UnicodeModal isOpen={unicodeModalIsOpen} closeModal={closeUnicodeModal} />\n          </div>\n      <div className=\"task-container\">\n      <div className=\"task-progress\">\n      {Array.from({ length: tasks[currentLevel].length }, (_, index) => (\n        <div\n          key={index}\n          className={`task-indicator ${index === currentTaskIndex ? 'current-task' : ''}`}\n          onClick={() => handleTaskClick(index)}\n        >\n          {index + 1}\n        </div>\n      ))}\n      </div>\n       <div className={`score-container ${scoreAnimation ? 'score-animation' : ''}`}>\n              <span className=\"score-text\" >Punktestand:</span>\n              <span className=\"score-value\">{score}</span>\n       </div>\n       </div>\n          <div className=\"task-container\">\n            <div className=\"task-text\">\n              <TaskScroll taskText={tasks[currentLevel][currentTaskIndex].question} />\n              {tasks[currentLevel][currentTaskIndex].type === 'multipleChoice' && (\n                <div className=\"options-container\">\n                  {Object.entries(tasks[currentLevel][currentTaskIndex].options).map(([key, value]) => (\n                    <div key={key} id={key} className=\"option\" onClick={() => handleOptionClick(key)}>\n                      {`${key}) ${value}`}\n                    </div>\n                  ))}\n                </div>\n              )}\n            </div>\n            {tasks[currentLevel][currentTaskIndex].type === 'input' && (\n              <div>\n                <input\n                  type=\"text\"\n                  className=\"input-field\"\n                  value={solution}\n                  onChange={(e) => setSolution(e.target.value)}\n                />\n                <button className=\"buttonSubmit\" onClick={handleSubmit}>\n                Antwort bestätigen\n                </button>\n              </div>\n            )}\n            {message && (\n              <div className=\"popup-game\">\n                <div className=\"popup-game-content\">\n                  <h2>{message}</h2>\n                  <button className=\"button\" onClick={() => setMessage(\"\")}>Schließen</button>\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n      )\n          }    \n    \nexport default GameScreen;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}