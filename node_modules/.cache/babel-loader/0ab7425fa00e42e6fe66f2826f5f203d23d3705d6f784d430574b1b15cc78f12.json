{"ast":null,"code":"var _jsxFileName = \"/Users/igorshkolnik/Desktop/Lerntool/lerntool/src/GameScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './GameScreen.css';\nimport ASCIIExpl from './ASCIIExplain';\nimport UnicodeExpl from './UnicodeExplain';\nimport TaskScroll from './TaskScroll';\nimport tasks from './Tasks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GameScreen() {\n  _s();\n  const levelBackgrounds = {\n    0: require('./tempel.jpeg'),\n    1: require('./tempel1.jpeg'),\n    2: require('./tempel2.jpeg'),\n    3: require('./tempel3.jpeg'),\n    4: require('./tempel4.jpeg'),\n    5: require('./tempel5.jpeg'),\n    6: require('./tempel6.jpeg'),\n    7: require('./tempel7.jpeg'),\n    8: require('./tempel8.jpeg'),\n    9: require('./tempel9.jpeg'),\n    10: require('./tempel10.jpeg')\n  };\n  const [currentLevel, setCurrentLevel] = useState(\"0\");\n  const [solution, setSolution] = useState(\"\");\n  const [showAsciiPopup, setShowAsciiPopup] = useState(false);\n  const [showUnicodePopup, setShowUnicodePopup] = useState(false);\n  const [score, setScore] = useState(0);\n  const [message, setMessage] = useState(\"\");\n  const [scoreAnimation, setScoreAnimation] = useState(false);\n  const [backgroundImage, setBackgroundImage] = useState(\"\");\n  const [currentTaskIndex, setCurrentTaskIndex] = useState(0);\n  const [solvedTasks, setSolvedTasks] = useState(Array.from({\n    length: 10\n  }, () => []));\n  const [showGame, setShowGame] = useState(false);\n  const handleTaskClick = index => {\n    setCurrentTaskIndex(index);\n  };\n  const initializeBackgroundImage = () => {\n    const initialBackgroundImage = levelBackgrounds[currentLevel];\n    document.body.style.backgroundImage = `url(${initialBackgroundImage})`;\n    document.body.style.backgroundSize = '100% 100%';\n    document.body.style.backgroundRepeat = 'no-repeat';\n    document.body.style.backgroundPosition = 'center center';\n  };\n  useEffect(() => {\n    initializeBackgroundImage();\n  }, []);\n  useEffect(() => {\n    if (score !== 0) {\n      setScoreAnimation(true);\n      setTimeout(() => {\n        setScoreAnimation(false);\n      }, 1000);\n    }\n  }, [score]);\n  const handleLevelClick = level => {\n    setCurrentLevel(level);\n    setCurrentTaskIndex(0);\n    setSolvedTasks(prevSolvedTasks => {\n      const updatedSolvedTasks = [...prevSolvedTasks];\n      updatedSolvedTasks[level] = [];\n      return updatedSolvedTasks;\n    });\n    setTimeout(() => {\n      setShowGame(true);\n    }, 3000);\n    const body = document.querySelector('body');\n    body.style.backgroundImage = `url(${levelBackgrounds[level]})`;\n    setBackgroundImage(`url(${levelBackgrounds[level]})`);\n  };\n  const handleSubmit = () => {\n    const currentTask = tasks[currentLevel][currentTaskIndex];\n    if (currentTask.type === 'input') {\n      if (!solvedTasks[currentLevel].includes(currentTaskIndex)) {\n        if (solution.trim() === currentTask.correctAnswer) {\n          setScore(prevScore => prevScore + 10);\n          setMessage(\"Richtig! Du hast 10 Punkte für diese Antwort bekommen.\");\n          setSolvedTasks(prevSolvedTasks => {\n            const updatedSolvedTasks = [...prevSolvedTasks];\n            updatedSolvedTasks[currentLevel] = [...updatedSolvedTasks[currentLevel], currentTaskIndex];\n            return updatedSolvedTasks;\n          });\n          setCurrentTaskIndex(prevIndex => {\n            if (prevIndex < tasks[currentLevel].length - 1) {\n              return prevIndex + 1;\n            } else {\n              setCurrentLevel(prevLevel => prevLevel + 1);\n              return 0;\n            }\n          });\n        } else {\n          setMessage(\"Leider falsch! Schaue dir noch einmal die Erklärungen an.\");\n          setScore(prevScore => prevScore >= 5 ? prevScore - 5 : 0);\n        }\n      } else {\n        setMessage(\"Du hast diese Aufgabe bereits gelöst.\");\n      }\n    }\n    setSolution(\"\");\n  };\n  const handleOptionClick = selectedOption => {\n    const optionElement = document.getElementById(selectedOption);\n    if (optionElement) {\n      optionElement.classList.add(\"glowing\");\n      setTimeout(() => {\n        optionElement.classList.remove(\"glowing\");\n        if (selectedOption === tasks[currentLevel][currentTaskIndex].correctAnswer) {\n          setScore(prevScore => prevScore + 10);\n          setMessage(\"Richtig! Du hast 10 Punkte für diese Antwort bekommen.\");\n          setCurrentTaskIndex(prevIndex => prevIndex + 1);\n          if (currentTaskIndex + 1 === tasks[currentLevel].length) {\n            setCurrentLevel(prevLevel => prevLevel + 1);\n            setCurrentTaskIndex(0);\n          }\n        } else {\n          setMessage(\"Leider falsch! Schaue dir noch einmal die Erklärungen an.\");\n          setScore(prevScore => prevScore >= 5 ? prevScore - 5 : 0);\n        }\n        setSolution(\"\");\n      }, 2500);\n    }\n  };\n  return showGame ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"level-bar\",\n      children: Array.from({\n        length: 10\n      }, (_, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `level-indicator ${index === currentLevel ? 'current-level' : ''}`,\n        onClick: () => handleLevelClick(index),\n        children: index + 1\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-progress\",\n      children: Array.from({\n        length: tasks[currentLevel].length\n      }, (_, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `task-indicator ${index === currentTaskIndex ? 'current-task' : ''}`,\n        onClick: () => handleTaskClick(index),\n        children: index + 1\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `score-container ${scoreAnimation ? 'score-animation' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"score-text\",\n        children: \"Punktestand:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"score-value\",\n        children: score\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-text\",\n        children: [/*#__PURE__*/_jsxDEV(TaskScroll, {\n          taskText: tasks[currentLevel][currentTaskIndex].question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 15\n        }, this), tasks[currentLevel][currentTaskIndex].type === 'multipleChoice' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"options-container\",\n          children: Object.entries(tasks[currentLevel][currentTaskIndex].options).map(([key, value]) => /*#__PURE__*/_jsxDEV(\"div\", {\n            id: key,\n            className: \"option\",\n            onClick: () => handleOptionClick(key),\n            children: `${key}) ${value}`\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 21\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 13\n      }, this), tasks[currentLevel][currentTaskIndex].type === 'input' && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"input-field\",\n          value: solution,\n          onChange: e => setSolution(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"buttonSubmit\",\n          onClick: handleSubmit,\n          children: \"Antwort best\\xE4tigen\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 15\n      }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup-game\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"popup-game-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setMessage(\"\"),\n            children: \"Schlie\\xDFen\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        onClick: () => setShowAsciiPopup(true),\n        children: \"ASCII Erkl\\xE4rung\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        onClick: () => setShowUnicodePopup(true),\n        children: \"Unicode Erkl\\xE4rung\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 11\n    }, this), showAsciiPopup && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"popup-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"ASCII Erkl\\xE4rung\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"close\",\n            onClick: () => setShowAsciiPopup(false),\n            children: \"X\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(ASCIIExpl, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: () => setShowAsciiPopup(false),\n          children: \"Schlie\\xDFen\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 13\n    }, this), showUnicodePopup && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Unicode Erkl\\xE4rung\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(UnicodeExpl, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: () => setShowUnicodePopup(false),\n          children: \"Schlie\\xDFen\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 9\n  }, this) : null;\n}\n_s(GameScreen, \"kFDJHl2bIVxnkwSwupMFMPEiBeo=\");\n_c = GameScreen;\nexport default GameScreen;\nvar _c;\n$RefreshReg$(_c, \"GameScreen\");","map":{"version":3,"names":["React","useState","useEffect","ASCIIExpl","UnicodeExpl","TaskScroll","tasks","jsxDEV","_jsxDEV","GameScreen","_s","levelBackgrounds","require","currentLevel","setCurrentLevel","solution","setSolution","showAsciiPopup","setShowAsciiPopup","showUnicodePopup","setShowUnicodePopup","score","setScore","message","setMessage","scoreAnimation","setScoreAnimation","backgroundImage","setBackgroundImage","currentTaskIndex","setCurrentTaskIndex","solvedTasks","setSolvedTasks","Array","from","length","showGame","setShowGame","handleTaskClick","index","initializeBackgroundImage","initialBackgroundImage","document","body","style","backgroundSize","backgroundRepeat","backgroundPosition","setTimeout","handleLevelClick","level","prevSolvedTasks","updatedSolvedTasks","querySelector","handleSubmit","currentTask","type","includes","trim","correctAnswer","prevScore","prevIndex","prevLevel","handleOptionClick","selectedOption","optionElement","getElementById","classList","add","remove","className","children","_","onClick","fileName","_jsxFileName","lineNumber","columnNumber","taskText","question","Object","entries","options","map","key","value","id","onChange","e","target","_c","$RefreshReg$"],"sources":["/Users/igorshkolnik/Desktop/Lerntool/lerntool/src/GameScreen.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './GameScreen.css';\nimport ASCIIExpl from './ASCIIExplain';\nimport UnicodeExpl from './UnicodeExplain';\nimport TaskScroll from './TaskScroll';\nimport tasks from './Tasks'; \n\nfunction GameScreen() {\n\n  const levelBackgrounds = {\n    0: require('./tempel.jpeg'),\n    1: require('./tempel1.jpeg'),\n    2: require('./tempel2.jpeg'),\n    3: require('./tempel3.jpeg'),\n    4: require('./tempel4.jpeg'),\n    5: require('./tempel5.jpeg'),\n    6: require('./tempel6.jpeg'),\n    7: require('./tempel7.jpeg'),\n    8: require('./tempel8.jpeg'),\n    9: require('./tempel9.jpeg'),\n    10: require('./tempel10.jpeg'),\n  };\n\n    const [currentLevel, setCurrentLevel] = useState(\"0\");\n    const [solution, setSolution] = useState(\"\");\n    const [showAsciiPopup, setShowAsciiPopup] = useState(false);\n    const [showUnicodePopup, setShowUnicodePopup] = useState(false);\n    const [score, setScore] = useState(0);\n    const [message, setMessage] = useState(\"\");\n    const [scoreAnimation, setScoreAnimation] = useState(false);\n    const [backgroundImage, setBackgroundImage] = useState(\"\");\n    const [currentTaskIndex, setCurrentTaskIndex] = useState(0);\n    const [solvedTasks, setSolvedTasks] = useState(Array.from({ length: 10 }, () => []));\n    const [showGame, setShowGame] = useState(false);\n\n\n    const handleTaskClick = (index) => {\n      setCurrentTaskIndex(index);\n    };\n\n    const initializeBackgroundImage = () => {\n      const initialBackgroundImage = levelBackgrounds[currentLevel];\n      document.body.style.backgroundImage = `url(${initialBackgroundImage})`;\n      document.body.style.backgroundSize = '100% 100%';\n      document.body.style.backgroundRepeat = 'no-repeat';\n      document.body.style.backgroundPosition = 'center center';\n    };\n  \n    useEffect(() => {\n      initializeBackgroundImage(); \n    }, []);\n\n      useEffect(() => {\n        if (score !== 0) {\n          setScoreAnimation(true);\n          setTimeout(() => {\n            setScoreAnimation(false);\n          }, 1000); \n        }\n      }, [score]);\n\n      const handleLevelClick = (level) => {\n      setCurrentLevel(level);\n      setCurrentTaskIndex(0);\n      setSolvedTasks((prevSolvedTasks) => {\n        const updatedSolvedTasks = [...prevSolvedTasks];\n        updatedSolvedTasks[level] = [];\n        return updatedSolvedTasks;\n      });\n      setTimeout(() => {\n        setShowGame(true);\n      }, 3000);\n      const body = document.querySelector('body');\n      body.style.backgroundImage = `url(${levelBackgrounds[level]})`;\n      setBackgroundImage(`url(${levelBackgrounds[level]})`);\n      };\n\n\n    const handleSubmit = () => {\n      const currentTask = tasks[currentLevel][currentTaskIndex];\n      if (currentTask.type === 'input') {\n        if (!solvedTasks[currentLevel].includes(currentTaskIndex)) {\n          if (solution.trim() === currentTask.correctAnswer) {\n            setScore((prevScore) => prevScore + 10);\n            setMessage(\"Richtig! Du hast 10 Punkte für diese Antwort bekommen.\");\n            setSolvedTasks((prevSolvedTasks) => {\n              const updatedSolvedTasks = [...prevSolvedTasks];\n              updatedSolvedTasks[currentLevel] = [...updatedSolvedTasks[currentLevel], currentTaskIndex];\n              return updatedSolvedTasks;\n            });\n    \n            setCurrentTaskIndex((prevIndex) => {\n              if (prevIndex < tasks[currentLevel].length - 1) {\n                return prevIndex + 1;\n              } else {\n                setCurrentLevel((prevLevel) => prevLevel + 1);\n                return 0; \n              }\n            });\n          } else {\n            setMessage(\"Leider falsch! Schaue dir noch einmal die Erklärungen an.\");\n            setScore((prevScore) => (prevScore >= 5 ? prevScore - 5 : 0));\n          }\n        } else {\n          setMessage(\"Du hast diese Aufgabe bereits gelöst.\");\n        }\n      }\n      setSolution(\"\");\n    };\n    \n    \n    \n\n    const handleOptionClick = (selectedOption) => {\n      const optionElement = document.getElementById(selectedOption);\n    \n      if (optionElement) {\n        optionElement.classList.add(\"glowing\");\n    \n        setTimeout(() => {\n          optionElement.classList.remove(\"glowing\");\n    \n          if (selectedOption === tasks[currentLevel][currentTaskIndex].correctAnswer) {\n            setScore((prevScore) => prevScore + 10);\n            setMessage(\"Richtig! Du hast 10 Punkte für diese Antwort bekommen.\");\n            setCurrentTaskIndex((prevIndex) => prevIndex + 1);\n    \n            if (currentTaskIndex + 1 === tasks[currentLevel].length) {\n              setCurrentLevel((prevLevel) => prevLevel + 1);\n              setCurrentTaskIndex(0); \n            }\n          } else {\n            setMessage(\"Leider falsch! Schaue dir noch einmal die Erklärungen an.\");\n            setScore((prevScore) => (prevScore >= 5 ? prevScore - 5 : 0));\n          }\n    \n          setSolution(\"\");\n        }, 2500);\n      }\n    };\n\n      return showGame ? (\n        <div className=\"game-container\">\n          <div className=\"level-bar\">\n            {Array.from({ length: 10 }, (_, index) => (\n              <div\n                key={index}\n                className={`level-indicator ${index === currentLevel ? 'current-level' : ''}`}\n                onClick={() => handleLevelClick(index)}\n              >\n                {index + 1}\n              </div>\n            ))}\n          </div>\n          <div className=\"task-progress\">\n          {Array.from({ length: tasks[currentLevel].length }, (_, index) => (\n          <div\n          key={index}\n          className={`task-indicator ${index === currentTaskIndex ? 'current-task' : ''}`}\n          onClick={() => handleTaskClick(index)}\n          >\n          {index + 1}\n          </div>\n          ))}\n        </div>\n          <div className={`score-container ${scoreAnimation ? 'score-animation' : ''}`}>\n              <span className=\"score-text\" >Punktestand:</span>\n              <span className=\"score-value\">{score}</span>\n            </div>\n          <div className=\"task-container\">\n            <div className=\"task-text\">\n              <TaskScroll taskText={tasks[currentLevel][currentTaskIndex].question} />\n              {tasks[currentLevel][currentTaskIndex].type === 'multipleChoice' && (\n                <div className=\"options-container\">\n                  {Object.entries(tasks[currentLevel][currentTaskIndex].options).map(([key, value]) => (\n                    <div key={key} id={key} className=\"option\" onClick={() => handleOptionClick(key)}>\n                      {`${key}) ${value}`}\n                    </div>\n                  ))}\n                </div>\n              )}\n            </div>\n            {tasks[currentLevel][currentTaskIndex].type === 'input' && (\n              <div>\n                <input\n                  type=\"text\"\n                  className=\"input-field\"\n                  value={solution}\n                  onChange={(e) => setSolution(e.target.value)}\n                />\n                <button className=\"buttonSubmit\" onClick={handleSubmit}>\n                Antwort bestätigen\n                </button>\n              </div>\n            )}\n            {message && (\n              <div className=\"popup-game\">\n                <div className=\"popup-game-content\">\n                  <h2>{message}</h2>\n                  <button onClick={() => setMessage(\"\")}>Schließen</button>\n                </div>\n              </div>\n            )}\n          </div>\n          <div className=\"button-container\">\n            <button className=\"button\" onClick={() => setShowAsciiPopup(true)}>\n              ASCII Erklärung\n            </button>\n            <button className=\"button\" onClick={() => setShowUnicodePopup(true)}>\n              Unicode Erklärung\n            </button>\n          </div>\n          {showAsciiPopup && (\n            <div className=\"popup\">\n              <div className=\"popup-content\">\n                <div className=\"popup-header\">\n                  <h2>ASCII Erklärung</h2>\n                  <button className=\"close\" onClick={() => setShowAsciiPopup(false)}>\n                    X\n                  </button>\n                </div>\n                <ASCIIExpl />\n                <button className=\"button\" onClick={() => setShowAsciiPopup(false)}>\n                  Schließen\n                </button>\n              </div>\n            </div>\n          )}\n          {showUnicodePopup && (\n            <div className=\"popup\">\n              <div className=\"popup-content\">\n                <h2>Unicode Erklärung</h2>\n                <UnicodeExpl />\n                <button className=\"button\" onClick={() => setShowUnicodePopup(false)}>\n                  Schließen\n                </button>\n              </div>\n            </div>\n          )}\n        </div>\n      ) : null;\n          }      \nexport default GameScreen;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}