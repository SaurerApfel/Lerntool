{"ast":null,"code":"// Hauptkomponente, zuständig für den Spielablauf\nimport React,{useState,useEffect}from'react';import'./GameScreen.css';import ASCIIExpl from'./ASCIIExplain';import UnicodeExpl from'./UnicodeExplain';import TaskScroll from'./TaskScroll';import tasks from'./Tasks';import Modal from'react-modal';import FinalScreen from'./FinalScreen';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const GameScreen=_ref=>{let{onGameCompletion}=_ref;const levelBackgrounds={0:require('./pictures/tempel.jpeg'),1:require('./pictures/tempel1.jpeg'),2:require('./pictures/tempel2.jpeg'),3:require('./pictures/tempel3.jpeg'),4:require('./pictures/tempel4.jpeg'),5:require('./pictures/tempel5.jpeg'),6:require('./pictures/tempel6.jpeg'),7:require('./pictures/tempel7.jpeg'),8:require('./pictures/tempel8.jpeg'),9:require('./pictures/tempel9.jpeg'),10:require('./pictures/tempel10.jpeg')};const[currentLevel,setCurrentLevel]=useState(0);const[solution,setSolution]=useState(\"\");const[score,setScore]=useState(0);const[message,setMessage]=useState(\"\");const[scoreAnimation,setScoreAnimation]=useState(false);const[backgroundImage,setBackgroundImage]=useState(\"\");const[currentTaskIndex,setCurrentTaskIndex]=useState(0);const[solvedTasks,setSolvedTasks]=useState(Array.from({length:10},()=>[]));const[animationComplete,setAnimationComplete]=useState(false);const[asciiModalIsOpen,setAsciiModalIsOpen]=useState(false);const[unicodeModalIsOpen,setUnicodeModalIsOpen]=useState(false);const[isEvaluationInProgress,setEvaluationInProgress]=useState(false);const[totalPoints,setTotalPoints]=useState(0);const[showFinalScreen,setShowFinalScreen]=useState(false);const levelAsNumber=parseInt(currentLevel,10);//Ist spiel beendet? Wenn ja mit punktzahl aufrufen, dann erscheint FinalScreen\nconst handleGameCompletion=score=>{onGameCompletion(score);};//Task-Bar\nconst handleTaskClick=index=>{setCurrentTaskIndex(index);};//Background initialisiereen\nconst initializeBackgroundImage=()=>{const initialBackgroundImage=levelBackgrounds[currentLevel];document.body.style.backgroundImage=\"url(\".concat(initialBackgroundImage,\")\");document.body.style.backgroundSize='100% 100%';document.body.style.backgroundRepeat='no-repeat';document.body.style.backgroundPosition='center center';};useEffect(()=>{initializeBackgroundImage();},[]);//Score Animation\nuseEffect(()=>{if(score!==0){setScoreAnimation(true);setTimeout(()=>{setScoreAnimation(false);},1000);}},[score]);// überprüfe, ob alle Aufgaben richtig und wenn ja, beende spiel\nuseEffect(()=>{if(AllTasksSolved()){handleGameCompletion(score);}},[solvedTasks]);//ASCII-Erklärung\nconst AsciiModal=_ref2=>{let{isOpen,closeModal}=_ref2;return/*#__PURE__*/_jsx(Modal,{isOpen:isOpen,onRequestClose:closeModal,contentLabel:\"ASCII Erkl\\xE4rung\",ariaHideApp:false,style:{content:{display:'flex',flexDirection:'column',alignItems:'center',justifyContent:'center'}},children:/*#__PURE__*/_jsxs(\"div\",{style:{margin:'auto',textAlign:'center'},children:[/*#__PURE__*/_jsx(ASCIIExpl,{}),/*#__PURE__*/_jsx(\"div\",{style:{marginTop:'-70px'},children:/*#__PURE__*/_jsx(\"button\",{className:\"ModalButton\",onClick:closeModal,children:\"Schlie\\xDFen\"})})]})});};//Unicode-Erklärung\nconst UnicodeModal=_ref3=>{let{isOpen,closeModal}=_ref3;return/*#__PURE__*/_jsx(Modal,{isOpen:isOpen,onRequestClose:closeModal,contentLabel:\"Unicode Erkl\\xE4rung\",ariaHideApp:false,style:{content:{display:'flex',flexDirection:'column-reverse',alignItems:'center',justifyContent:'center'}},children:/*#__PURE__*/_jsxs(\"div\",{style:{margin:'auto',textAlign:'center'},children:[/*#__PURE__*/_jsx(UnicodeExpl,{}),/*#__PURE__*/_jsx(\"div\",{style:{marginTop:'-70px'},children:/*#__PURE__*/_jsx(\"button\",{className:\"ModalButton\",onClick:closeModal,children:\"Schlie\\xDFen\"})})]})});};const openAsciiModal=()=>setAsciiModalIsOpen(true);const closeAsciiModal=()=>setAsciiModalIsOpen(false);const openUnicodeModal=()=>setUnicodeModalIsOpen(true);const closeUnicodeModal=()=>setUnicodeModalIsOpen(false);// Level-Bar funktionalität\nconst handleLevelClick=level=>{setCurrentLevel(level);setCurrentTaskIndex(0);setSolvedTasks(prevSolvedTasks=>{const updatedSolvedTasks=[...prevSolvedTasks];updatedSolvedTasks[level]=[];return updatedSolvedTasks;});const body=document.querySelector('body');body.style.backgroundImage=\"url(\".concat(levelBackgrounds[level],\")\");setBackgroundImage(\"url(\".concat(levelBackgrounds[level],\")\"));};//Auswertungsfunktion Input-Aufgaben\nconst handleSubmit=()=>{const currentTask=tasks[currentLevel][currentTaskIndex];if(currentTask.type==='input'){if(!solvedTasks[currentLevel].includes(currentTaskIndex)){if(solution.trim()===currentTask.correctAnswer){setScore(prevScore=>prevScore+10+levelAsNumber);const num=10+levelAsNumber;setMessage(\"Richtig! Du hast \".concat(num,\" Punkte f\\xFCr diese Antwort bekommen.\"));setSolvedTasks(prevSolvedTasks=>{const updatedSolvedTasks=[...prevSolvedTasks];updatedSolvedTasks[currentLevel]=[...updatedSolvedTasks[currentLevel],currentTaskIndex];if(AllTasksSolved()){handleGameCompletion(score);}return updatedSolvedTasks;});setCurrentTaskIndex(prevIndex=>{if(prevIndex<tasks[currentLevel].length-1){return prevIndex+1;}else{setCurrentLevel(prevLevel=>prevLevel+1);return 0;}});}else{setMessage(\"Leider falsch! Schaue dir noch einmal die Erklärungen an.\");setScore(prevScore=>prevScore>=5?prevScore-1:0);}}else{setMessage(\"Du hast diese Aufgabe bereits gelöst.\");}}if(AllTasksSolved()){handleGameCompletion(score);}setSolution(\"\");};//überprüfen ob alle 30 Aufgaben gelöst sind\nconst AllTasksSolved=()=>{const totalTasks=tasks.flat().length;const totalSolvedTasks=solvedTasks.flat().length;return totalSolvedTasks===totalTasks;};//Auswertungsfunktion Multiple-Choice\nconst handleOptionClick=selectedOption=>{if(!isEvaluationInProgress){setEvaluationInProgress(true);const optionElement=document.getElementById(selectedOption);if(optionElement){optionElement.classList.add(\"glowing\");if(!solvedTasks[currentLevel].includes(currentTaskIndex)){setTimeout(()=>{optionElement.classList.remove(\"glowing\");if(selectedOption===tasks[currentLevel][currentTaskIndex].correctAnswer){setScore(prevScore=>prevScore+10+levelAsNumber);const num=10+levelAsNumber;setMessage(\"Richtig! Du hast \".concat(num,\" Punkte f\\xFCr diese Antwort bekommen.\"));setCurrentTaskIndex(prevIndex=>prevIndex+1);setSolvedTasks(prevSolvedTasks=>{const updatedSolvedTasks=[...prevSolvedTasks];updatedSolvedTasks[currentLevel]=[...updatedSolvedTasks[currentLevel],currentTaskIndex];if(AllTasksSolved()){handleGameCompletion(score);}return updatedSolvedTasks;});if(currentTaskIndex+1===tasks[currentLevel].length){if(currentLevel<9){setCurrentLevel(prevLevel=>prevLevel===\"0\"?\"1\":prevLevel+1);setCurrentTaskIndex(0);}else{setCurrentLevel(prevLevel=>prevLevel);setCurrentTaskIndex(2);}}}else{setMessage(\"Leider falsch! Schaue dir noch einmal die Erklärungen an.\");setScore(prevScore=>Math.max(prevScore-levelAsNumber-3,0));}if(AllTasksSolved()){handleGameCompletion(score);}setSolution(\"\");setEvaluationInProgress(false);},2500);}else{optionElement.classList.remove(\"glowing\");setMessage(\"Du hast diese Aufgabe bereits gelöst.\");setEvaluationInProgress(false);if(AllTasksSolved()){handleGameCompletion(score);}}}}};return/*#__PURE__*/_jsxs(\"div\",{className:\"game-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"level-bar\",children:Array.from({length:10},(_,index)=>/*#__PURE__*/_jsx(\"div\",{className:\"level-indicator \".concat(index===currentLevel?'current-level':''),onClick:()=>handleLevelClick(index),children:index+1},index))}),/*#__PURE__*/_jsxs(\"div\",{className:\"button-container\",children:[/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"button\",onClick:openAsciiModal,children:\"ASCII Erkl\\xE4rung\"}),/*#__PURE__*/_jsx(AsciiModal,{isOpen:asciiModalIsOpen,closeModal:closeAsciiModal}),/*#__PURE__*/_jsx(\"button\",{className:\"button\",onClick:openUnicodeModal,children:\"Unicode Erkl\\xE4rung\"}),/*#__PURE__*/_jsx(UnicodeModal,{isOpen:unicodeModalIsOpen,closeModal:closeUnicodeModal})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"task-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"task-progress\",children:Array.from({length:tasks[currentLevel].length},(_,index)=>/*#__PURE__*/_jsx(\"div\",{className:\"task-indicator \".concat(index===currentTaskIndex?'current-task':''),onClick:()=>handleTaskClick(index),children:index+1},index))}),/*#__PURE__*/_jsxs(\"div\",{className:\"score-container \".concat(scoreAnimation?'score-animation':''),children:[/*#__PURE__*/_jsx(\"span\",{className:\"score-text\",children:\"Punktestand:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"score-value\",children:score})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"task-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"task-text\",children:[/*#__PURE__*/_jsx(TaskScroll,{taskText:tasks[currentLevel][currentTaskIndex].question}),tasks[currentLevel][currentTaskIndex].type==='multipleChoice'&&/*#__PURE__*/_jsx(\"div\",{className:\"options-container\",children:Object.entries(tasks[currentLevel][currentTaskIndex].options).map(_ref4=>{let[key,value]=_ref4;return/*#__PURE__*/_jsx(\"div\",{id:key,className:\"option\",onClick:()=>handleOptionClick(key),children:\"\".concat(key,\") \").concat(value)},key);})})]}),tasks[currentLevel][currentTaskIndex].type==='input'&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"input-field\",value:solution,onChange:e=>setSolution(e.target.value)}),/*#__PURE__*/_jsx(\"button\",{className:\"buttonSubmit\",onClick:handleSubmit,children:\"Antwort best\\xE4tigen\"})]}),message&&/*#__PURE__*/_jsx(\"div\",{className:\"popup-game\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"popup-game-content\",children:[/*#__PURE__*/_jsx(\"h2\",{children:message}),/*#__PURE__*/_jsx(\"button\",{className:\"button\",onClick:()=>setMessage(\"\"),children:\"Schlie\\xDFen\"})]})})]})]});};export default GameScreen;","map":{"version":3,"names":["React","useState","useEffect","ASCIIExpl","UnicodeExpl","TaskScroll","tasks","Modal","FinalScreen","jsx","_jsx","jsxs","_jsxs","GameScreen","_ref","onGameCompletion","levelBackgrounds","require","currentLevel","setCurrentLevel","solution","setSolution","score","setScore","message","setMessage","scoreAnimation","setScoreAnimation","backgroundImage","setBackgroundImage","currentTaskIndex","setCurrentTaskIndex","solvedTasks","setSolvedTasks","Array","from","length","animationComplete","setAnimationComplete","asciiModalIsOpen","setAsciiModalIsOpen","unicodeModalIsOpen","setUnicodeModalIsOpen","isEvaluationInProgress","setEvaluationInProgress","totalPoints","setTotalPoints","showFinalScreen","setShowFinalScreen","levelAsNumber","parseInt","handleGameCompletion","handleTaskClick","index","initializeBackgroundImage","initialBackgroundImage","document","body","style","concat","backgroundSize","backgroundRepeat","backgroundPosition","setTimeout","AllTasksSolved","AsciiModal","_ref2","isOpen","closeModal","onRequestClose","contentLabel","ariaHideApp","content","display","flexDirection","alignItems","justifyContent","children","margin","textAlign","marginTop","className","onClick","UnicodeModal","_ref3","openAsciiModal","closeAsciiModal","openUnicodeModal","closeUnicodeModal","handleLevelClick","level","prevSolvedTasks","updatedSolvedTasks","querySelector","handleSubmit","currentTask","type","includes","trim","correctAnswer","prevScore","num","prevIndex","prevLevel","totalTasks","flat","totalSolvedTasks","handleOptionClick","selectedOption","optionElement","getElementById","classList","add","remove","Math","max","_","taskText","question","Object","entries","options","map","_ref4","key","value","id","onChange","e","target"],"sources":["/Users/igorshkolnik/Desktop/tool/src/GameScreen.js"],"sourcesContent":["// Hauptkomponente, zuständig für den Spielablauf\nimport React, { useState, useEffect } from 'react';\nimport './GameScreen.css';\nimport ASCIIExpl from './ASCIIExplain';\nimport UnicodeExpl from './UnicodeExplain';\nimport TaskScroll from './TaskScroll';\nimport tasks from './Tasks'; \nimport Modal from 'react-modal';\nimport FinalScreen from './FinalScreen';\n\nconst GameScreen = ({ onGameCompletion }) => {\n\n  const levelBackgrounds = {\n    0: require('./pictures/tempel.jpeg'),\n    1: require('./pictures/tempel1.jpeg'),\n    2: require('./pictures/tempel2.jpeg'),\n    3: require('./pictures/tempel3.jpeg'),\n    4: require('./pictures/tempel4.jpeg'),\n    5: require('./pictures/tempel5.jpeg'),\n    6: require('./pictures/tempel6.jpeg'),\n    7: require('./pictures/tempel7.jpeg'),\n    8: require('./pictures/tempel8.jpeg'),\n    9: require('./pictures/tempel9.jpeg'),\n    10: require('./pictures/tempel10.jpeg'),\n  };\n\n    const [currentLevel, setCurrentLevel] = useState(0);\n    const [solution, setSolution] = useState(\"\");\n    const [score, setScore] = useState(0);\n    const [message, setMessage] = useState(\"\");\n    const [scoreAnimation, setScoreAnimation] = useState(false);\n    const [backgroundImage, setBackgroundImage] = useState(\"\");\n    const [currentTaskIndex, setCurrentTaskIndex] = useState(0);\n    const [solvedTasks, setSolvedTasks] = useState(Array.from({ length: 10 }, () => []));\n    const [animationComplete, setAnimationComplete] = useState(false);\n    const [asciiModalIsOpen, setAsciiModalIsOpen] = useState(false);\n    const [unicodeModalIsOpen, setUnicodeModalIsOpen] = useState(false);\n    const [isEvaluationInProgress, setEvaluationInProgress] = useState(false);\n    const [totalPoints, setTotalPoints] = useState(0);\n    const [showFinalScreen, setShowFinalScreen] = useState(false);\n\n    \n    const levelAsNumber = parseInt(currentLevel, 10);\n\n    //Ist spiel beendet? Wenn ja mit punktzahl aufrufen, dann erscheint FinalScreen\n    const handleGameCompletion = (score) => {\n      onGameCompletion(score);\n    };\n\n    //Task-Bar\n    const handleTaskClick = (index) => {\n      setCurrentTaskIndex(index);\n    };\n\n //Background initialisiereen\n\n    const initializeBackgroundImage = () => {\n      const initialBackgroundImage = levelBackgrounds[currentLevel];\n      document.body.style.backgroundImage = `url(${initialBackgroundImage})`;\n      document.body.style.backgroundSize = '100% 100%';\n      document.body.style.backgroundRepeat = 'no-repeat';\n      document.body.style.backgroundPosition = 'center center';\n    };\n \n    useEffect(() => {\n      initializeBackgroundImage(); \n    }, []);\n//Score Animation\n      useEffect(() => {\n        if (score !== 0) {\n          setScoreAnimation(true);\n          setTimeout(() => {\n            setScoreAnimation(false);\n          }, 1000); \n        }\n      }, [score]);\n\n      // überprüfe, ob alle Aufgaben richtig und wenn ja, beende spiel\n      useEffect(() => {\n        if (AllTasksSolved()) {\n          handleGameCompletion(score);\n        }\n      }, [solvedTasks]);\n\n  \n\n  //ASCII-Erklärung\n\n      const AsciiModal = ({ isOpen, closeModal }) => (\n        <Modal\n          isOpen={isOpen}\n          onRequestClose={closeModal}\n          contentLabel=\"ASCII Erklärung\"\n          ariaHideApp={false}\n          style={{\n            content: {\n              display: 'flex',\n              flexDirection: 'column',\n              alignItems: 'center',\n              justifyContent: 'center',\n            },\n          }}\n        >\n<div style={{ margin: 'auto', textAlign: 'center',}}>\n      <ASCIIExpl />\n      <div style={{ marginTop: '-70px' }}>\n        <button className=\"ModalButton\" onClick={closeModal}>\n          Schließen\n        </button>\n      </div>\n    </div>\n  </Modal>\n      );\n\n      //Unicode-Erklärung\n      const UnicodeModal = ({ isOpen, closeModal }) => (\n        <Modal\n          isOpen={isOpen}\n          onRequestClose={closeModal}\n          contentLabel=\"Unicode Erklärung\"\n          ariaHideApp={false}\n          style={{\n            content: {\n              display: 'flex',\n              flexDirection: 'column-reverse',\n              alignItems: 'center',\n              justifyContent: 'center',\n            },\n          }}\n        >\n<div style={{ margin: 'auto', textAlign: 'center',}}>\n      <UnicodeExpl />\n      <div style={{ marginTop: '-70px' }}>\n        <button className=\"ModalButton\" onClick={closeModal}>\n          Schließen\n        </button>\n      </div>\n    </div>\n  </Modal>\n      );\n\n      const openAsciiModal = () => setAsciiModalIsOpen(true);\n      const closeAsciiModal = () => setAsciiModalIsOpen(false);\n      const openUnicodeModal = () => setUnicodeModalIsOpen(true);\n      const closeUnicodeModal = () => setUnicodeModalIsOpen(false);\n\n\n// Level-Bar funktionalität\n\n      const handleLevelClick = (level) => {\n      setCurrentLevel(level);\n      setCurrentTaskIndex(0);\n      setSolvedTasks((prevSolvedTasks) => {\n        const updatedSolvedTasks = [...prevSolvedTasks];\n        updatedSolvedTasks[level] = [];\n        return updatedSolvedTasks;\n      });\n      const body = document.querySelector('body');\n      body.style.backgroundImage = `url(${levelBackgrounds[level]})`;\n      setBackgroundImage(`url(${levelBackgrounds[level]})`);\n      };\n\n//Auswertungsfunktion Input-Aufgaben\n      const handleSubmit = () => { \n        const currentTask = tasks[currentLevel][currentTaskIndex];\n        if (currentTask.type === 'input') {\n          if (!solvedTasks[currentLevel].includes(currentTaskIndex)) {\n            if (solution.trim() === currentTask.correctAnswer) {\n              setScore((prevScore) => prevScore + 10 + levelAsNumber);\n              const num = 10 + levelAsNumber;\n              setMessage(`Richtig! Du hast ${num} Punkte für diese Antwort bekommen.`);\n              setSolvedTasks((prevSolvedTasks) => {\n                const updatedSolvedTasks = [...prevSolvedTasks];\n                updatedSolvedTasks[currentLevel] = [...updatedSolvedTasks[currentLevel], currentTaskIndex];\n                if (AllTasksSolved()) {\n                  handleGameCompletion(score);\n                }\n                return updatedSolvedTasks;\n              });\n              setCurrentTaskIndex((prevIndex) => {\n                if (prevIndex < tasks[currentLevel].length - 1) {\n                  return prevIndex + 1;\n                } else {\n                  setCurrentLevel((prevLevel) => prevLevel + 1);\n                  return 0; \n                }\n              });\n            } else {\n              setMessage(\"Leider falsch! Schaue dir noch einmal die Erklärungen an.\");\n              setScore((prevScore) => (prevScore >= 5 ? prevScore - 1 : 0));\n            }\n          } else {\n            setMessage(\"Du hast diese Aufgabe bereits gelöst.\");\n          }\n        }\n        if (AllTasksSolved()) {\n          handleGameCompletion(score);\n        }\n        setSolution(\"\");\n      };\n    \n    //überprüfen ob alle 30 Aufgaben gelöst sind\n    const AllTasksSolved = () => {\n      const totalTasks = tasks.flat().length;\n      const totalSolvedTasks = solvedTasks.flat().length;\n      return totalSolvedTasks === totalTasks;\n    };\n\n//Auswertungsfunktion Multiple-Choice\n    const handleOptionClick = (selectedOption) => {\n      if (!isEvaluationInProgress) {\n        setEvaluationInProgress(true);\n      const optionElement = document.getElementById(selectedOption);\n      if (optionElement) {\n        optionElement.classList.add(\"glowing\");\n        if (!solvedTasks[currentLevel].includes(currentTaskIndex)) {\n        setTimeout(() => {\n          optionElement.classList.remove(\"glowing\");\n          if (selectedOption === tasks[currentLevel][currentTaskIndex].correctAnswer) {\n            setScore((prevScore) => prevScore + 10 + levelAsNumber);\n            const num = 10 + levelAsNumber;\n            setMessage(`Richtig! Du hast ${num} Punkte für diese Antwort bekommen.`);\n            setCurrentTaskIndex((prevIndex) => prevIndex + 1);\n            setSolvedTasks((prevSolvedTasks) => {\n              const updatedSolvedTasks = [...prevSolvedTasks];\n              updatedSolvedTasks[currentLevel] = [...updatedSolvedTasks[currentLevel], currentTaskIndex];\n              if (AllTasksSolved()) {\n                handleGameCompletion(score);\n              }\n              return updatedSolvedTasks;\n            });\n            if (currentTaskIndex + 1 === tasks[currentLevel].length) {\n              if (currentLevel < 9) {\n              setCurrentLevel((prevLevel) => (prevLevel === \"0\" ? \"1\" : prevLevel +1));\n              setCurrentTaskIndex(0);\n              }\n              else {\n                setCurrentLevel((prevLevel) => (prevLevel));\n                setCurrentTaskIndex(2);\n              }\n            }\n          } else {\n            setMessage(\"Leider falsch! Schaue dir noch einmal die Erklärungen an.\");\n            setScore((prevScore) => Math.max(prevScore - levelAsNumber - 3, 0));\n          }\n          if (AllTasksSolved()) {\n            handleGameCompletion(score);\n          }\n          setSolution(\"\");\n          setEvaluationInProgress(false);\n        }, 2500); \n      }\n      else {\n        optionElement.classList.remove(\"glowing\");\n        setMessage(\"Du hast diese Aufgabe bereits gelöst.\");\n        setEvaluationInProgress(false);\n        if (AllTasksSolved()) {\n          handleGameCompletion(score);\n        }\n        }\n      }\n    }\n    };\n\n\n      return (\n<div className=\"game-container\">\n  <div className=\"level-bar\">\n    {Array.from({ length: 10 }, (_, index) => (\n      <div\n        key={index}\n        className={`level-indicator ${index === currentLevel ? 'current-level' : ''}`}\n        onClick={() => handleLevelClick(index)}\n      >\n        {index + 1}\n      </div>\n    ))}\n  </div>\n  <div className=\"button-container\">\n    <button type=\"button\" className=\"button\" onClick={openAsciiModal}>\n      ASCII Erklärung\n    </button>\n    <AsciiModal isOpen={asciiModalIsOpen} closeModal={closeAsciiModal} />\n    <button className=\"button\" onClick={openUnicodeModal}>\n      Unicode Erklärung\n    </button>\n    <UnicodeModal isOpen={unicodeModalIsOpen} closeModal={closeUnicodeModal} />\n  </div>\n  <div className=\"task-container\">\n    <div className=\"task-progress\">\n      {Array.from({ length: tasks[currentLevel].length }, (_, index) => (\n        <div\n          key={index}\n          className={`task-indicator ${index === currentTaskIndex ? 'current-task' : ''}`}\n          onClick={() => handleTaskClick(index)}\n        >\n          {index + 1}\n        </div>\n      ))}\n    </div>\n    <div className={`score-container ${scoreAnimation ? 'score-animation' : ''}`}>\n      <span className=\"score-text\">Punktestand:</span>\n      <span className=\"score-value\">{score}</span>\n    </div>\n  </div>\n\n  <div className=\"task-container\">\n      <div className=\"task-text\">\n        <TaskScroll taskText={tasks[currentLevel][currentTaskIndex].question} />\n        {tasks[currentLevel][currentTaskIndex].type === 'multipleChoice' && (\n          <div className=\"options-container\">\n            {Object.entries(tasks[currentLevel][currentTaskIndex].options).map(([key, value]) => (\n              <div key={key} id={key} className=\"option\" onClick={() => handleOptionClick(key)}>\n                {`${key}) ${value}`}\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n    {tasks[currentLevel][currentTaskIndex].type === 'input' && (\n      <div>\n        <input\n          type=\"text\"\n          className=\"input-field\"\n          value={solution}\n          onChange={(e) => setSolution(e.target.value)}\n        />\n        <button className=\"buttonSubmit\" onClick={handleSubmit}>\n          Antwort bestätigen\n        </button>\n      </div>\n    )}\n          {message && (\n              <div className=\"popup-game\">\n                <div className=\"popup-game-content\">\n                  <h2>{message}</h2>\n                  <button className=\"button\" onClick={() => setMessage(\"\")}>Schließen</button>\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n      )\n          }    \n    \nexport default GameScreen;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}