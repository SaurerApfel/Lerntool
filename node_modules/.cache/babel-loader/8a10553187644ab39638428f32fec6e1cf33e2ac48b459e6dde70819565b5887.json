{"ast":null,"code":"var _jsxFileName = \"/Users/igorshkolnik/Desktop/Lerntool/lerntool/src/GameScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './GameScreen.css';\nimport ASCIIExpl from './ASCIIExplain';\nimport UnicodeExpl from './UnicodeExplain';\nimport TaskScroll from './TaskScroll';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GameScreen() {\n  _s();\n  const levelBackgrounds = {\n    1: require('./tempel.jpeg'),\n    2: require('./tempel1.jpeg'),\n    3: require('./tempel2.jpeg'),\n    4: require('./tempel3.jpeg'),\n    5: require('./tempel4.jpeg'),\n    6: require('./tempel5.jpeg'),\n    7: require('./tempel6.jpeg'),\n    8: require('./tempel7.jpeg'),\n    9: require('./tempel8.jpeg'),\n    9: require('./tempel9.jpeg'),\n    10: require('./tempel10.jpeg')\n  };\n  const [currentLevel, setCurrentLevel] = useState(\"1\");\n  const [solution, setSolution] = useState(\"\");\n  const [showAsciiPopup, setShowAsciiPopup] = useState(false);\n  const [showUnicodePopup, setShowUnicodePopup] = useState(false);\n  const [score, setScore] = useState(0);\n  const [message, setMessage] = useState(\"\");\n  const [scoreAnimation, setScoreAnimation] = useState(false);\n  const [backgroundImage, setBackgroundImage] = useState(\"\");\n  const initializeBackgroundImage = () => {\n    const initialBackgroundImage = levelBackgrounds[currentLevel];\n    document.body.style.backgroundImage = `url(${initialBackgroundImage})`;\n  };\n  useEffect(() => {\n    initializeBackgroundImage();\n  }, []);\n  const tasks = [{\n    type: 'input',\n    question: 'Deine erste Aufgabe auf dem Weg nach draußen, besteht darin, die Binärzahl 100000 in eine Dezimalzahl umzuformen.',\n    correctAnswer: \"a\"\n  }, {\n    type: 'input',\n    question: 'Nachdem du im ersten Raum deine Kenntnisse über binäre Codierungen unter Beweis stellen konntest, ist es an der Zeit deine Kenntnisse zur ASCII Codierung zu überprüfen. Wie viele verschiedene Zeichen können mit 7-bit ASCII codiert werden?',\n    correctAnswer: \"a\"\n  }, {\n    type: 'multipleChoice',\n    question: 'Du hast dich bis jetzt gut geschlagen und die ersten beiden Räume bereits hinter dir gelassen. Damit die nächste Tür sich öffnet, musst du aber auch deine Kenntnisse über Unicode beweisen. Wie viele Zeichen lassen sich aktuell mit Unicode codieren? Wähle die Antwort aus, die am nächsten dran ist.',\n    options: {\n      a: '128',\n      b: '256',\n      c: '15000',\n      d: '150000'\n    },\n    correctAnswer: \"a\"\n  }, {\n    type: 'multipleChoice',\n    question: 'Wie es aussieht, hast du die Grundlagen drauf. Dann wirst du sicherlich auch wissen, mit welcher Codierung man Smileys codieren kann',\n    options: {\n      a: 'ASCII',\n      b: 'Unicode',\n      c: 'beiden',\n      d: 'keiner'\n    },\n    correctAnswer: \"a\"\n  }, {\n    type: 'multipleChoice',\n    question: 'Unicode ist ein wenig komplizierter als ASCII. In der Unicode Erklärung hast du wahrscheinlich schon gelesen, dass es UTF-8, UTF-16 und UTF-32 gibt. Aber hast du das ganze auch wirklich verstanden? Mit welchem Format lassen sich mehr einzelne Zeichen codieren? a) UTF-8, b) UTF-16, c) UTF-32, d) mit allen gleich viele',\n    options: {\n      a: 'ASCII',\n      b: 'Unicode',\n      c: 'beiden',\n      d: 'keiner'\n    },\n    correctAnswer: \"a\"\n  }, {\n    type: 'input',\n    question: 'Kannst du auch die Zeichen entziffern, die hier im Raum an der Wand stehen? Mal sehen, ob du die Folgen aus 0en und 1en entziffern kannst. Für welches Zeichen steht der ASCII Code 1000110?',\n    correctAnswer: \"a\"\n  }, {\n    type: 'input',\n    question: 'Jetzt will ich sehen, ob du auch selbst etwas an die Wand mit der Hilfe von 0en und 1en schreiben kannst. Wie lautet der 8-Bit ASCII-Code für das Wort Tempel?',\n    correctAnswer: \"a\"\n  }, {\n    type: 'input',\n    question: 'Deine Rechenkünste sind nun gefragt. Wie viele einzelne Zeichen kann eine Zeichencodierung mit 16-bit codieren?',\n    correctAnswer: \"a\"\n  }, {\n    type: 'input',\n    question: 'Jetzt hast du es fast geschafft. Jetzt musst du aber zeigen, dass du bis hierhin gut aufgepasst hast und dein neu erlangtes Wissen auch anwenden kannst. Welcher ASCII-Code repräsentiert das Sonderzeichen & ?',\n    correctAnswer: \"a\"\n  }, {\n    type: 'input',\n    question: 'Dieser Text wurde im ASCII-Code dargestellt: 48 65 6c 6c 6f 21. Um die letzte Tür zu öffnen musst du dieses Wort dekodieren',\n    correctAnswer: \"a\"\n  }];\n  useEffect(() => {\n    if (score !== 0) {\n      setScoreAnimation(true);\n      setTimeout(() => {\n        setScoreAnimation(false);\n      }, 1000);\n    }\n  }, [score]);\n  const handleLevelClick = level => {\n    console.log(\"Handle Level Click:\", level);\n    setCurrentLevel(level);\n    const body = document.querySelector('body');\n    body.style.backgroundImage = `url(${levelBackgrounds[level]})`;\n    setBackgroundImage(`url(${levelBackgrounds[level]})`);\n  };\n  const handleSubmit = () => {\n    if (solution.trim() === tasks[currentLevel].correctAnswer) {\n      setScore(prevScore => prevScore + 10);\n      setMessage(\"Richtig! Du hast 10 Punkte für diese Antwort bekommen.\");\n      setCurrentLevel(prevLevel => prevLevel + 1);\n    } else {\n      setMessage(\"Leider falsch! Schaue dir noch einmal die Erklärungen an.\");\n      setScore(prevScore => prevScore >= 5 ? prevScore - 5 : 0);\n    }\n    setSolution(\"\");\n  };\n  const handleOptionClick = selectedOption => {\n    const option = selectedOption;\n    option.classList.add(\"glowing\");\n    setTimeout(() => {\n      if (selectedOption === tasks[currentLevel].correctAnswer) {\n        // Die richtige Antwort wurde ausgewählt\n        setScore(prevScore => prevScore + 10);\n        setMessage(\"Richtig! Du hast 10 Punkte für diese Antwort bekommen.\");\n        setCurrentLevel(prevLevel => prevLevel + 1);\n      } else {\n        // Falsche Antwort\n        setMessage(\"Leider falsch! Schaue dir noch einmal die Erklärungen an.\");\n        setScore(prevScore => prevScore >= 5 ? prevScore - 5 : 0);\n      }\n      setSolution(\"\");\n    }, 2000);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"level-bar\",\n      children: [Array.from({\n        length: 10\n      }, (_, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `level-indicator ${index + 1 === currentLevel ? 'current-level' : ''}`,\n        onClick: () => handleLevelClick(index + 1),\n        children: index + 1\n      }, index + 1, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 15\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `score-container ${scoreAnimation ? 'score-animation' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"score-text\",\n          children: \"Punktestand:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"score-value\",\n          children: score\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-text\",\n        children: [/*#__PURE__*/_jsxDEV(TaskScroll, {\n          taskText: tasks[currentLevel].question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 15\n        }, this), tasks[currentLevel].type === 'multipleChoice' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"options-container\",\n          children: Object.entries(tasks[currentLevel].options).map(([key, value]) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"option\",\n            onClick: () => handleOptionClick(key),\n            children: `${key}) ${value}`\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 21\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 13\n      }, this), tasks[currentLevel].type === 'input' && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"input-field\",\n          value: solution,\n          onChange: e => setSolution(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"buttonSubmit\",\n          onClick: handleSubmit,\n          children: \"Antwort best\\xE4tigen\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 15\n      }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"popup-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setMessage(\"\"),\n            children: \"Schlie\\xDFen\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        onClick: () => setShowAsciiPopup(true),\n        children: \"ASCII Erkl\\xE4rung\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        onClick: () => setShowUnicodePopup(true),\n        children: \"Unicode Erkl\\xE4rung\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 11\n    }, this), showAsciiPopup && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"popup-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"ASCII Erkl\\xE4rung\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"close\",\n            onClick: () => setShowAsciiPopup(false),\n            children: \"X\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(ASCIIExpl, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: () => setShowAsciiPopup(false),\n          children: \"Schlie\\xDFen\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 13\n    }, this), showUnicodePopup && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Unicode Erkl\\xE4rung\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(UnicodeExpl, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: () => setShowUnicodePopup(false),\n          children: \"Schlie\\xDFen\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 154,\n    columnNumber: 9\n  }, this);\n}\n_s(GameScreen, \"SU4pK4AFb1owx7mzV3KaSJorj00=\");\n_c = GameScreen;\nexport default GameScreen;\nvar _c;\n$RefreshReg$(_c, \"GameScreen\");","map":{"version":3,"names":["React","useState","useEffect","ASCIIExpl","UnicodeExpl","TaskScroll","jsxDEV","_jsxDEV","GameScreen","_s","levelBackgrounds","require","currentLevel","setCurrentLevel","solution","setSolution","showAsciiPopup","setShowAsciiPopup","showUnicodePopup","setShowUnicodePopup","score","setScore","message","setMessage","scoreAnimation","setScoreAnimation","backgroundImage","setBackgroundImage","initializeBackgroundImage","initialBackgroundImage","document","body","style","tasks","type","question","correctAnswer","options","a","b","c","d","setTimeout","handleLevelClick","level","console","log","querySelector","handleSubmit","trim","prevScore","prevLevel","handleOptionClick","selectedOption","option","classList","add","className","children","Array","from","length","_","index","onClick","fileName","_jsxFileName","lineNumber","columnNumber","taskText","Object","entries","map","key","value","onChange","e","target","_c","$RefreshReg$"],"sources":["/Users/igorshkolnik/Desktop/Lerntool/lerntool/src/GameScreen.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './GameScreen.css';\nimport ASCIIExpl from './ASCIIExplain';\nimport UnicodeExpl from './UnicodeExplain';\nimport TaskScroll from './TaskScroll';\n\nfunction GameScreen() {\n\n  const levelBackgrounds = {\n    1: require('./tempel.jpeg'),\n    2: require('./tempel1.jpeg'),\n    3: require('./tempel2.jpeg'),\n    4: require('./tempel3.jpeg'),\n    5: require('./tempel4.jpeg'),\n    6: require('./tempel5.jpeg'),\n    7: require('./tempel6.jpeg'),\n    8: require('./tempel7.jpeg'),\n    9: require('./tempel8.jpeg'),\n    9: require('./tempel9.jpeg'),\n    10: require('./tempel10.jpeg'),\n  };\n\n    const [currentLevel, setCurrentLevel] = useState(\"1\");\n    const [solution, setSolution] = useState(\"\");\n    const [showAsciiPopup, setShowAsciiPopup] = useState(false);\n    const [showUnicodePopup, setShowUnicodePopup] = useState(false);\n    const [score, setScore] = useState(0);\n    const [message, setMessage] = useState(\"\");\n    const [scoreAnimation, setScoreAnimation] = useState(false);\n    const [backgroundImage, setBackgroundImage] = useState(\"\");\n\n    const initializeBackgroundImage = () => {\n      const initialBackgroundImage = levelBackgrounds[currentLevel];\n      document.body.style.backgroundImage = `url(${initialBackgroundImage})`;\n    };\n  \n    useEffect(() => {\n      initializeBackgroundImage(); \n    }, []);\n\n\n    const tasks = [\n      {\n        type: 'input',\n        question: 'Deine erste Aufgabe auf dem Weg nach draußen, besteht darin, die Binärzahl 100000 in eine Dezimalzahl umzuformen.',\n        correctAnswer:\"a\",\n      },\n      {\n        type: 'input',\n        question: 'Nachdem du im ersten Raum deine Kenntnisse über binäre Codierungen unter Beweis stellen konntest, ist es an der Zeit deine Kenntnisse zur ASCII Codierung zu überprüfen. Wie viele verschiedene Zeichen können mit 7-bit ASCII codiert werden?',\n        correctAnswer:\"a\",\n      },\n      {\n        type: 'multipleChoice',\n        question: 'Du hast dich bis jetzt gut geschlagen und die ersten beiden Räume bereits hinter dir gelassen. Damit die nächste Tür sich öffnet, musst du aber auch deine Kenntnisse über Unicode beweisen. Wie viele Zeichen lassen sich aktuell mit Unicode codieren? Wähle die Antwort aus, die am nächsten dran ist.',\n        options: {\n          a: '128', b: '256', c: '15000', d: '150000',\n        },\n        correctAnswer:\"a\",\n      },\n      {\n        type: 'multipleChoice',\n        question:'Wie es aussieht, hast du die Grundlagen drauf. Dann wirst du sicherlich auch wissen, mit welcher Codierung man Smileys codieren kann',\n        options: {\n          a: 'ASCII', b: 'Unicode', c: 'beiden', d: 'keiner',\n        },\n        correctAnswer:\"a\",\n      },\n      {\n        type: 'multipleChoice',\n        question: 'Unicode ist ein wenig komplizierter als ASCII. In der Unicode Erklärung hast du wahrscheinlich schon gelesen, dass es UTF-8, UTF-16 und UTF-32 gibt. Aber hast du das ganze auch wirklich verstanden? Mit welchem Format lassen sich mehr einzelne Zeichen codieren? a) UTF-8, b) UTF-16, c) UTF-32, d) mit allen gleich viele',\n        options: {\n          a: 'ASCII', b: 'Unicode', c: 'beiden', d: 'keiner',\n        },\n        correctAnswer:\"a\",\n      },\n      {\n        type: 'input',\n        question: 'Kannst du auch die Zeichen entziffern, die hier im Raum an der Wand stehen? Mal sehen, ob du die Folgen aus 0en und 1en entziffern kannst. Für welches Zeichen steht der ASCII Code 1000110?',\n        correctAnswer: \"a\",\n      },\n      {\n        type: 'input',\n        question: 'Jetzt will ich sehen, ob du auch selbst etwas an die Wand mit der Hilfe von 0en und 1en schreiben kannst. Wie lautet der 8-Bit ASCII-Code für das Wort Tempel?',\n        correctAnswer:\"a\",\n      },\n      {\n        type: 'input',\n        question: 'Deine Rechenkünste sind nun gefragt. Wie viele einzelne Zeichen kann eine Zeichencodierung mit 16-bit codieren?',\n        correctAnswer:\"a\",\n      },\n      {\n        type: 'input',\n        question: 'Jetzt hast du es fast geschafft. Jetzt musst du aber zeigen, dass du bis hierhin gut aufgepasst hast und dein neu erlangtes Wissen auch anwenden kannst. Welcher ASCII-Code repräsentiert das Sonderzeichen & ?',\n        correctAnswer:\"a\",\n      },\n      {\n        type: 'input',\n        question: 'Dieser Text wurde im ASCII-Code dargestellt: 48 65 6c 6c 6f 21. Um die letzte Tür zu öffnen musst du dieses Wort dekodieren',\n        correctAnswer:\"a\"\n      }\n      ];\n\n      useEffect(() => {\n        if (score !== 0) {\n          setScoreAnimation(true);\n          setTimeout(() => {\n            setScoreAnimation(false);\n          }, 1000); \n        }\n      }, [score]);\n\n    const handleLevelClick = (level) => {\n    console.log(\"Handle Level Click:\", level);\n    setCurrentLevel(level);\n    const body = document.querySelector('body');\n    body.style.backgroundImage = `url(${levelBackgrounds[level]})`;\n    setBackgroundImage(`url(${levelBackgrounds[level]})`);\n    };\n\n\n    const handleSubmit = () => {\n        if (solution.trim() === tasks[currentLevel].correctAnswer) {\n          setScore((prevScore) => prevScore + 10);\n          setMessage(\"Richtig! Du hast 10 Punkte für diese Antwort bekommen.\");\n          setCurrentLevel((prevLevel) => prevLevel + 1); \n        } else {\n          setMessage(\"Leider falsch! Schaue dir noch einmal die Erklärungen an.\");\n          setScore((prevScore) => (prevScore >= 5 ? prevScore - 5 : 0));\n        }\n        setSolution(\"\");\n      };\n\n      const handleOptionClick = (selectedOption) => {\n       const option = selectedOption;\n       option.classList.add(\"glowing\");\n        setTimeout(() => {\n        \n        if (selectedOption === tasks[currentLevel].correctAnswer) {\n          // Die richtige Antwort wurde ausgewählt\n          setScore((prevScore) => prevScore + 10);\n          setMessage(\"Richtig! Du hast 10 Punkte für diese Antwort bekommen.\");\n          setCurrentLevel((prevLevel) => prevLevel + 1);\n        } else {\n          // Falsche Antwort\n          setMessage(\"Leider falsch! Schaue dir noch einmal die Erklärungen an.\");\n          setScore((prevScore) => (prevScore >= 5 ? prevScore - 5 : 0));\n        }\n        setSolution(\"\");\n      }, 2000);\n    }\n\n      return (\n        <div className=\"game-container\">\n          <div className=\"level-bar\">\n            {Array.from({ length: 10 }, (_, index) => (\n              <div\n                key={index + 1}\n                className={`level-indicator ${index + 1 === currentLevel ? 'current-level' : ''}`}\n                onClick={() => handleLevelClick(index + 1)}\n              >\n                {index + 1}\n              </div>\n            ))}\n            <div className={`score-container ${scoreAnimation ? 'score-animation' : ''}`}>\n              <span className=\"score-text\">Punktestand:</span>\n              <span className=\"score-value\">{score}</span>\n            </div>\n          </div>\n          <div className=\"task-container\">\n            <div className=\"task-text\">\n              <TaskScroll taskText={tasks[currentLevel].question} />\n              {tasks[currentLevel].type === 'multipleChoice' && (\n                <div className=\"options-container\">\n                  {Object.entries(tasks[currentLevel].options).map(([key, value]) => (\n                    <div key={key} className=\"option\" onClick={() => handleOptionClick(key)}>\n                      {`${key}) ${value}`}\n                    </div>\n                  ))}\n                </div>\n              )}\n            </div>\n            {tasks[currentLevel].type === 'input' && (\n              <div>\n                <input\n                  type=\"text\"\n                  className=\"input-field\"\n                  value={solution}\n                  onChange={(e) => setSolution(e.target.value)}\n                />\n                <button className=\"buttonSubmit\" onClick={handleSubmit}>\n                Antwort bestätigen\n                </button>\n              </div>\n            )}\n            {message && (\n              <div className=\"popup\">\n                <div className=\"popup-content\">\n                  <h2>{message}</h2>\n                  <button onClick={() => setMessage(\"\")}>Schließen</button>\n                </div>\n              </div>\n            )}\n          </div>\n          <div className=\"button-container\">\n            <button className=\"button\" onClick={() => setShowAsciiPopup(true)}>\n              ASCII Erklärung\n            </button>\n            <button className=\"button\" onClick={() => setShowUnicodePopup(true)}>\n              Unicode Erklärung\n            </button>\n          </div>\n          {showAsciiPopup && (\n            <div className=\"popup\">\n              <div className=\"popup-content\">\n                <div className=\"popup-header\">\n                  <h2>ASCII Erklärung</h2>\n                  <button className=\"close\" onClick={() => setShowAsciiPopup(false)}>\n                    X\n                  </button>\n                </div>\n                <ASCIIExpl />\n                <button className=\"button\" onClick={() => setShowAsciiPopup(false)}>\n                  Schließen\n                </button>\n              </div>\n            </div>\n          )}\n          {showUnicodePopup && (\n            <div className=\"popup\">\n              <div className=\"popup-content\">\n                <h2>Unicode Erklärung</h2>\n                <UnicodeExpl />\n                <button className=\"button\" onClick={() => setShowUnicodePopup(false)}>\n                  Schließen\n                </button>\n              </div>\n            </div>\n          )}\n        </div>\n      );\n          }      \nexport default GameScreen;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}