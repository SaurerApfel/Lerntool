{"ast":null,"code":"var _jsxFileName = \"/Users/igorshkolnik/Desktop/tool/src/GameScreen.js\",\n  _s = $RefreshSig$();\n// Hauptkomponente, zuständig für den Spielablauf\nimport React, { useState, useEffect } from 'react';\nimport './GameScreen.css';\nimport ASCIIExpl from './ASCIIExplain';\nimport UnicodeExpl from './UnicodeExplain';\nimport TaskScroll from './TaskScroll';\nimport tasks from './Tasks';\nimport Modal from 'react-modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GameScreen() {\n  _s();\n  const levelBackgrounds = {\n    0: require('./pictures/tempel.jpeg'),\n    1: require('./pictures/tempel1.jpeg'),\n    2: require('./pictures/tempel2.jpeg'),\n    3: require('./pictures/tempel3.jpeg'),\n    4: require('./pictures/tempel4.jpeg'),\n    5: require('./pictures/tempel5.jpeg'),\n    6: require('./pictures/tempel6.jpeg'),\n    7: require('./pictures/tempel7.jpeg'),\n    8: require('./pictures/tempel8.jpeg'),\n    9: require('./pictures/tempel9.jpeg'),\n    10: require('./pictures/tempel10.jpeg')\n  };\n  const [currentLevel, setCurrentLevel] = useState(0);\n  const [solution, setSolution] = useState(\"\");\n  const [score, setScore] = useState(0);\n  const [message, setMessage] = useState(\"\");\n  const [scoreAnimation, setScoreAnimation] = useState(false);\n  const [backgroundImage, setBackgroundImage] = useState(\"\");\n  const [currentTaskIndex, setCurrentTaskIndex] = useState(0);\n  const [solvedTasks, setSolvedTasks] = useState(Array.from({\n    length: 10\n  }, () => []));\n  const [animationComplete, setAnimationComplete] = useState(false);\n  const [asciiModalIsOpen, setAsciiModalIsOpen] = useState(false);\n  const [unicodeModalIsOpen, setUnicodeModalIsOpen] = useState(false);\n  const [isEvaluationInProgress, setEvaluationInProgress] = useState(false);\n  const [totalPoints, setTotalPoints] = useState(0);\n  const [showFinalScreen, setShowFinalScreen] = useState(false);\n  const levelAsNumber = parseInt(currentLevel, 10);\n  const handleGameCompletion = () => {\n    setShowFinalScreen(true);\n  };\n  const handleTaskClick = index => {\n    setCurrentTaskIndex(index);\n  };\n  const initializeBackgroundImage = () => {\n    const initialBackgroundImage = levelBackgrounds[currentLevel];\n    document.body.style.backgroundImage = `url(${initialBackgroundImage})`;\n    document.body.style.backgroundSize = '100% 100%';\n    document.body.style.backgroundRepeat = 'no-repeat';\n    document.body.style.backgroundPosition = 'center center';\n  };\n  useEffect(() => {\n    initializeBackgroundImage();\n  }, []);\n  useEffect(() => {\n    if (score !== 0) {\n      setScoreAnimation(true);\n      setTimeout(() => {\n        setScoreAnimation(false);\n      }, 1000);\n    }\n  }, [score]);\n  const AsciiModal = ({\n    isOpen,\n    closeModal\n  }) => /*#__PURE__*/_jsxDEV(Modal, {\n    isOpen: isOpen,\n    onRequestClose: closeModal,\n    contentLabel: \"ASCII Erkl\\xE4rung\",\n    ariaHideApp: false,\n    style: {\n      content: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center'\n      }\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        margin: 'auto',\n        textAlign: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(ASCIIExpl, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '-70px'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"ModalButton\",\n          onClick: closeModal,\n          children: \"Schlie\\xDFen\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 1\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n  const UnicodeModal = ({\n    isOpen,\n    closeModal\n  }) => /*#__PURE__*/_jsxDEV(Modal, {\n    isOpen: isOpen,\n    onRequestClose: closeModal,\n    contentLabel: \"Unicode Erkl\\xE4rung\",\n    ariaHideApp: false,\n    style: {\n      content: {\n        display: 'flex',\n        flexDirection: 'column-reverse',\n        alignItems: 'center',\n        justifyContent: 'center'\n      }\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        margin: 'auto',\n        textAlign: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(UnicodeExpl, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '-70px'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"ModalButton\",\n          onClick: closeModal,\n          children: \"Schlie\\xDFen\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 1\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 9\n  }, this);\n  const temporarySolvedTasks = Array.from({\n    length: 10\n  }, (_, level) => {\n    return Array.from({\n      length: tasks[level].length\n    }, (_, index) => {\n      return level === 9 && index === tasks[9].length - 1 ? false : true;\n    });\n  });\n  const openAsciiModal = () => setAsciiModalIsOpen(true);\n  const closeAsciiModal = () => setAsciiModalIsOpen(false);\n  const openUnicodeModal = () => setUnicodeModalIsOpen(true);\n  const closeUnicodeModal = () => setUnicodeModalIsOpen(false);\n  const handleLevelClick = level => {\n    setCurrentLevel(level);\n    setCurrentTaskIndex(0);\n    setSolvedTasks(prevSolvedTasks => {\n      const updatedSolvedTasks = [...prevSolvedTasks];\n      updatedSolvedTasks[level] = [];\n      return updatedSolvedTasks;\n    });\n    const body = document.querySelector('body');\n    body.style.backgroundImage = `url(${levelBackgrounds[level]})`;\n    setBackgroundImage(`url(${levelBackgrounds[level]})`);\n  };\n  const handleSubmit = () => {\n    handleGameCompletion();\n    setSolvedTasks(temporarySolvedTasks);\n    const currentTask = tasks[currentLevel][currentTaskIndex];\n    if (currentTask.type === 'input') {\n      if (!solvedTasks[currentLevel].includes(currentTaskIndex)) {\n        if (solution.trim() === currentTask.correctAnswer) {\n          setScore(prevScore => {\n            const newScore = prevScore + 10 + levelAsNumber;\n            setMessage(`Richtig! Du hast ${10 + levelAsNumber} Punkte für diese Antwort bekommen. Dein aktueller Punktestand: ${newScore}`);\n            return newScore;\n          });\n          setSolvedTasks(prevSolvedTasks => {\n            const updatedSolvedTasks = [...prevSolvedTasks];\n            updatedSolvedTasks[currentLevel] = [...updatedSolvedTasks[currentLevel], currentTaskIndex];\n            return updatedSolvedTasks;\n          });\n          const areAllTasksSolved = AllTasksSolved();\n          if (areAllTasksSolved) {\n            return;\n          }\n          setCurrentTaskIndex(prevIndex => {\n            if (prevIndex < tasks[currentLevel].length - 1) {\n              return prevIndex + 1;\n            } else {\n              if (currentLevel === 9 && currentTaskIndex === 2) {\n                setMessage(\"Du hast die letzte Aufgabe richtig gelöst, aber du kannst die Tür nach draußen noch nicht öffen, da du noch nicht alle Aufgaben in allen Räumen gelöst hast.\");\n              } else {\n                setCurrentLevel(prevLevel => prevLevel + 1);\n                setCurrentTaskIndex(0);\n              }\n              return 0;\n            }\n          });\n        } else {\n          setMessage(\"Leider falsch! Schaue dir noch einmal die Erklärungen an.\");\n          setScore(prevScore => prevScore >= 5 ? prevScore - 1 : 0);\n        }\n      } else {\n        setMessage(\"Du hast diese Aufgabe bereits gelöst.\");\n      }\n    }\n    setSolution(\"\");\n  };\n  const AllTasksSolved = () => {\n    const totalTasks = tasks.flat().length;\n    const totalSolvedTasks = solvedTasks.flat().length;\n    return totalSolvedTasks === totalTasks;\n  };\n  const handleOptionClick = selectedOption => {\n    handleGameCompletion(score);\n    if (!isEvaluationInProgress) {\n      setEvaluationInProgress(true);\n      const currentTask = tasks[currentLevel][currentTaskIndex];\n      const optionElement = document.getElementById(selectedOption);\n      if (optionElement) {\n        optionElement.classList.add(\"glowing\");\n        if (!solvedTasks[currentLevel].includes(currentTaskIndex)) {\n          setTimeout(() => {\n            optionElement.classList.remove(\"glowing\");\n            if (selectedOption === tasks[currentLevel][currentTaskIndex].correctAnswer) {\n              setScore(prevScore => {\n                const newScore = prevScore + 10 + levelAsNumber;\n                setMessage(`Richtig! Du hast ${10 + levelAsNumber} Punkte für diese Antwort bekommen. Dein aktueller Punktestand: ${newScore}`);\n                return newScore;\n              });\n              setSolvedTasks(prevSolvedTasks => {\n                const updatedSolvedTasks = [...prevSolvedTasks];\n                updatedSolvedTasks[currentLevel] = [...updatedSolvedTasks[currentLevel], currentTaskIndex];\n                return updatedSolvedTasks;\n              });\n              const areAllTasksSolved = AllTasksSolved();\n              if (areAllTasksSolved) {\n                return;\n              }\n              if (currentLevel === 9 && currentTaskIndex === 2) {\n                setMessage(\"Du hast die letzte Aufgabe richtig gelöst, aber du kannst die Tür nach draußen noch nicht öffen, da du noch nicht alle Aufgaben in allen Räumen gelöst hast.\");\n                return;\n              }\n              setCurrentTaskIndex(prevIndex => {\n                if (prevIndex + 1 < tasks[currentLevel].length) {\n                  return prevIndex + 1;\n                }\n              });\n              if (currentTaskIndex + 1 === tasks[currentLevel].length) {\n                setCurrentLevel(prevLevel => prevLevel === \"0\" ? \"1\" : prevLevel + 1);\n                setCurrentTaskIndex(0);\n              }\n            } else {\n              setMessage(\"Leider falsch! Schaue dir noch einmal die Erklärungen an.\");\n              setScore(prevScore => prevScore >= 5 ? prevScore - levelAsNumber - 3 : 0);\n            }\n            setEvaluationInProgress(false);\n            setSolution(\"\");\n          }, 2500);\n        } else {\n          optionElement.classList.remove(\"glowing\");\n          setMessage(\"Du hast diese Aufgabe bereits gelöst.\");\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"level-bar\",\n      children: Array.from({\n        length: 10\n      }, (_, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `level-indicator ${index === currentLevel ? 'current-level' : ''}`,\n        onClick: () => handleLevelClick(index),\n        children: index + 1\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 7\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"button\",\n        onClick: openAsciiModal,\n        children: \"ASCII Erkl\\xE4rung\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(AsciiModal, {\n        isOpen: asciiModalIsOpen,\n        closeModal: closeAsciiModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        onClick: openUnicodeModal,\n        children: \"Unicode Erkl\\xE4rung\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(UnicodeModal, {\n        isOpen: unicodeModalIsOpen,\n        closeModal: closeUnicodeModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-progress\",\n        children: Array.from({\n          length: tasks[currentLevel].length\n        }, (_, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `task-indicator ${index === currentTaskIndex ? 'current-task' : ''}`,\n          onClick: () => handleTaskClick(index),\n          children: index + 1\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 9\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `score-container ${scoreAnimation ? 'score-animation' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"score-text\",\n          children: \"Punktestand:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"score-value\",\n          children: score\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-text\",\n        children: [/*#__PURE__*/_jsxDEV(TaskScroll, {\n          taskText: tasks[currentLevel][currentTaskIndex].question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 9\n        }, this), tasks[currentLevel][currentTaskIndex].type === 'multipleChoice' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"options-container\",\n          children: Object.entries(tasks[currentLevel][currentTaskIndex].options).map(([key, value]) => /*#__PURE__*/_jsxDEV(\"div\", {\n            id: key,\n            className: \"option\",\n            onClick: () => handleOptionClick(key),\n            children: `${key}) ${value}`\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 7\n      }, this), tasks[currentLevel][currentTaskIndex].type === 'input' && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"input-field\",\n          value: solution,\n          onChange: e => setSolution(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"buttonSubmit\",\n          onClick: handleSubmit,\n          children: \"Antwort best\\xE4tigen\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 7\n      }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup-game\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"popup-game-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button\",\n            onClick: () => setMessage(\"\"),\n            children: \"Schlie\\xDFen\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 263,\n    columnNumber: 1\n  }, this);\n}\n_s(GameScreen, \"/iyA7zPumBP4NlvEKU5Lc9RBPHo=\");\n_c = GameScreen;\nexport default GameScreen;\nvar _c;\n$RefreshReg$(_c, \"GameScreen\");","map":{"version":3,"names":["React","useState","useEffect","ASCIIExpl","UnicodeExpl","TaskScroll","tasks","Modal","jsxDEV","_jsxDEV","GameScreen","_s","levelBackgrounds","require","currentLevel","setCurrentLevel","solution","setSolution","score","setScore","message","setMessage","scoreAnimation","setScoreAnimation","backgroundImage","setBackgroundImage","currentTaskIndex","setCurrentTaskIndex","solvedTasks","setSolvedTasks","Array","from","length","animationComplete","setAnimationComplete","asciiModalIsOpen","setAsciiModalIsOpen","unicodeModalIsOpen","setUnicodeModalIsOpen","isEvaluationInProgress","setEvaluationInProgress","totalPoints","setTotalPoints","showFinalScreen","setShowFinalScreen","levelAsNumber","parseInt","handleGameCompletion","handleTaskClick","index","initializeBackgroundImage","initialBackgroundImage","document","body","style","backgroundSize","backgroundRepeat","backgroundPosition","setTimeout","AsciiModal","isOpen","closeModal","onRequestClose","contentLabel","ariaHideApp","content","display","flexDirection","alignItems","justifyContent","children","margin","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","marginTop","className","onClick","UnicodeModal","temporarySolvedTasks","_","level","openAsciiModal","closeAsciiModal","openUnicodeModal","closeUnicodeModal","handleLevelClick","prevSolvedTasks","updatedSolvedTasks","querySelector","handleSubmit","currentTask","type","includes","trim","correctAnswer","prevScore","newScore","areAllTasksSolved","AllTasksSolved","prevIndex","prevLevel","totalTasks","flat","totalSolvedTasks","handleOptionClick","selectedOption","optionElement","getElementById","classList","add","remove","taskText","question","Object","entries","options","map","key","value","id","onChange","e","target","_c","$RefreshReg$"],"sources":["/Users/igorshkolnik/Desktop/tool/src/GameScreen.js"],"sourcesContent":["// Hauptkomponente, zuständig für den Spielablauf\nimport React, { useState, useEffect } from 'react';\nimport './GameScreen.css';\nimport ASCIIExpl from './ASCIIExplain';\nimport UnicodeExpl from './UnicodeExplain';\nimport TaskScroll from './TaskScroll';\nimport tasks from './Tasks'; \nimport Modal from 'react-modal';\n\nfunction GameScreen() {\n\n  const levelBackgrounds = {\n    0: require('./pictures/tempel.jpeg'),\n    1: require('./pictures/tempel1.jpeg'),\n    2: require('./pictures/tempel2.jpeg'),\n    3: require('./pictures/tempel3.jpeg'),\n    4: require('./pictures/tempel4.jpeg'),\n    5: require('./pictures/tempel5.jpeg'),\n    6: require('./pictures/tempel6.jpeg'),\n    7: require('./pictures/tempel7.jpeg'),\n    8: require('./pictures/tempel8.jpeg'),\n    9: require('./pictures/tempel9.jpeg'),\n    10: require('./pictures/tempel10.jpeg'),\n  };\n\n    const [currentLevel, setCurrentLevel] = useState(0);\n    const [solution, setSolution] = useState(\"\");\n    const [score, setScore] = useState(0);\n    const [message, setMessage] = useState(\"\");\n    const [scoreAnimation, setScoreAnimation] = useState(false);\n    const [backgroundImage, setBackgroundImage] = useState(\"\");\n    const [currentTaskIndex, setCurrentTaskIndex] = useState(0);\n    const [solvedTasks, setSolvedTasks] = useState(Array.from({ length: 10 }, () => []));\n    const [animationComplete, setAnimationComplete] = useState(false);\n    const [asciiModalIsOpen, setAsciiModalIsOpen] = useState(false);\n    const [unicodeModalIsOpen, setUnicodeModalIsOpen] = useState(false);\n    const [isEvaluationInProgress, setEvaluationInProgress] = useState(false);\n    const [totalPoints, setTotalPoints] = useState(0);\n    const [showFinalScreen, setShowFinalScreen] = useState(false);\n\n    \n    const levelAsNumber = parseInt(currentLevel, 10);\n\n    const handleGameCompletion = () => {\n      setShowFinalScreen(true);\n    };\n\n    const handleTaskClick = (index) => {\n      setCurrentTaskIndex(index);\n    };\n\n    const initializeBackgroundImage = () => {\n      const initialBackgroundImage = levelBackgrounds[currentLevel];\n      document.body.style.backgroundImage = `url(${initialBackgroundImage})`;\n      document.body.style.backgroundSize = '100% 100%';\n      document.body.style.backgroundRepeat = 'no-repeat';\n      document.body.style.backgroundPosition = 'center center';\n    };\n  \n    useEffect(() => {\n      initializeBackgroundImage(); \n    }, []);\n\n      useEffect(() => {\n        if (score !== 0) {\n          setScoreAnimation(true);\n          setTimeout(() => {\n            setScoreAnimation(false);\n          }, 1000); \n        }\n      }, [score]);\n\n  \n\n      const AsciiModal = ({ isOpen, closeModal }) => (\n        <Modal\n          isOpen={isOpen}\n          onRequestClose={closeModal}\n          contentLabel=\"ASCII Erklärung\"\n          ariaHideApp={false}\n          style={{\n            content: {\n              display: 'flex',\n              flexDirection: 'column',\n              alignItems: 'center',\n              justifyContent: 'center',\n            },\n          }}\n        >\n<div style={{ margin: 'auto', textAlign: 'center',}}>\n      <ASCIIExpl />\n      <div style={{ marginTop: '-70px' }}>\n        <button className=\"ModalButton\" onClick={closeModal}>\n          Schließen\n        </button>\n      </div>\n    </div>\n  </Modal>\n      );\n\n      const UnicodeModal = ({ isOpen, closeModal }) => (\n        <Modal\n          isOpen={isOpen}\n          onRequestClose={closeModal}\n          contentLabel=\"Unicode Erklärung\"\n          ariaHideApp={false}\n          style={{\n            content: {\n              display: 'flex',\n              flexDirection: 'column-reverse',\n              alignItems: 'center',\n              justifyContent: 'center',\n            },\n          }}\n        >\n<div style={{ margin: 'auto', textAlign: 'center',}}>\n      <UnicodeExpl />\n      <div style={{ marginTop: '-70px' }}>\n        <button className=\"ModalButton\" onClick={closeModal}>\n          Schließen\n        </button>\n      </div>\n    </div>\n  </Modal>\n      );\n\n      const temporarySolvedTasks = Array.from({ length: 10 }, (_, level) => {\n        return Array.from({ length: tasks[level].length }, (_, index) => {\n          return level === 9 && index === tasks[9].length - 1 ? false : true;\n        });\n      });\n      \n\n      const openAsciiModal = () => setAsciiModalIsOpen(true);\n      const closeAsciiModal = () => setAsciiModalIsOpen(false);\n      const openUnicodeModal = () => setUnicodeModalIsOpen(true);\n      const closeUnicodeModal = () => setUnicodeModalIsOpen(false);\n\n      const handleLevelClick = (level) => {\n      setCurrentLevel(level);\n      setCurrentTaskIndex(0);\n      setSolvedTasks((prevSolvedTasks) => {\n        const updatedSolvedTasks = [...prevSolvedTasks];\n        updatedSolvedTasks[level] = [];\n        return updatedSolvedTasks;\n      });\n      const body = document.querySelector('body');\n      body.style.backgroundImage = `url(${levelBackgrounds[level]})`;\n      setBackgroundImage(`url(${levelBackgrounds[level]})`);\n      };\n\n\n      const handleSubmit = () => {\n        handleGameCompletion(); \n        setSolvedTasks(temporarySolvedTasks);\n        const currentTask = tasks[currentLevel][currentTaskIndex];\n        if (currentTask.type === 'input') {\n          if (!solvedTasks[currentLevel].includes(currentTaskIndex)) {\n            if (solution.trim() === currentTask.correctAnswer) {\n              setScore((prevScore) => {\n                const newScore = prevScore + 10 + levelAsNumber;\n                setMessage(`Richtig! Du hast ${10 + levelAsNumber} Punkte für diese Antwort bekommen. Dein aktueller Punktestand: ${newScore}`);\n                return newScore;\n              });\n              setSolvedTasks((prevSolvedTasks) => {\n                const updatedSolvedTasks = [...prevSolvedTasks];\n                updatedSolvedTasks[currentLevel] = [...updatedSolvedTasks[currentLevel], currentTaskIndex];\n                return updatedSolvedTasks;\n              });\n              const areAllTasksSolved = AllTasksSolved();\n              if (areAllTasksSolved) {\n                return;\n              }\n              setCurrentTaskIndex((prevIndex) => {\n                if (prevIndex < tasks[currentLevel].length - 1) {\n                  return prevIndex + 1;\n                } else {\n                  if (currentLevel === 9 && currentTaskIndex === 2) {\n                    setMessage(\"Du hast die letzte Aufgabe richtig gelöst, aber du kannst die Tür nach draußen noch nicht öffen, da du noch nicht alle Aufgaben in allen Räumen gelöst hast.\");\n                  } else {\n                    setCurrentLevel((prevLevel) => prevLevel + 1);\n                    setCurrentTaskIndex(0);\n                  }\n                  return 0;\n                }\n              });\n            } else {\n              setMessage(\"Leider falsch! Schaue dir noch einmal die Erklärungen an.\");\n              setScore((prevScore) => (prevScore >= 5 ? prevScore - 1 : 0));\n            }\n          } else {\n            setMessage(\"Du hast diese Aufgabe bereits gelöst.\");\n          }\n        }\n        setSolution(\"\");\n      };\n    \n    \n    const AllTasksSolved = () => {\n      const totalTasks = tasks.flat().length;\n      const totalSolvedTasks = solvedTasks.flat().length;\n      return totalSolvedTasks === totalTasks;\n    };\n\n    const handleOptionClick = (selectedOption) => {\n      handleGameCompletion(score); \n      if (!isEvaluationInProgress) {\n        setEvaluationInProgress(true);\n      const currentTask = tasks[currentLevel][currentTaskIndex];\n      const optionElement = document.getElementById(selectedOption);\n      if (optionElement) {\n        optionElement.classList.add(\"glowing\");\n        if (!solvedTasks[currentLevel].includes(currentTaskIndex)) {\n        setTimeout(() => {\n          optionElement.classList.remove(\"glowing\");\n          if (selectedOption === tasks[currentLevel][currentTaskIndex].correctAnswer) {\n            setScore((prevScore) => {\n              const newScore = prevScore + 10 + levelAsNumber;\n              setMessage(`Richtig! Du hast ${10 + levelAsNumber} Punkte für diese Antwort bekommen. Dein aktueller Punktestand: ${newScore}`);\n              return newScore;\n            });\n            setSolvedTasks((prevSolvedTasks) => {\n              const updatedSolvedTasks = [...prevSolvedTasks];\n              updatedSolvedTasks[currentLevel] = [...updatedSolvedTasks[currentLevel], currentTaskIndex];\n              return updatedSolvedTasks;\n            });\n            const areAllTasksSolved = AllTasksSolved();\n              if (areAllTasksSolved) {\n    \n                return;\n              }\n              if (currentLevel === 9 && currentTaskIndex === 2) {\n                setMessage(\"Du hast die letzte Aufgabe richtig gelöst, aber du kannst die Tür nach draußen noch nicht öffen, da du noch nicht alle Aufgaben in allen Räumen gelöst hast.\");\n                return;\n              }\n            setCurrentTaskIndex((prevIndex) => {\n              if (prevIndex + 1 < tasks[currentLevel].length) {\n                return prevIndex + 1;\n              } \n            });\n            if (currentTaskIndex + 1 === tasks[currentLevel].length) {\n              setCurrentLevel((prevLevel) => (prevLevel === \"0\" ? \"1\" : prevLevel +1));\n              setCurrentTaskIndex(0);\n            }\n          } else {\n            setMessage(\"Leider falsch! Schaue dir noch einmal die Erklärungen an.\");\n            setScore((prevScore) => (prevScore >= 5 ? prevScore - levelAsNumber - 3 : 0));\n          }\n          setEvaluationInProgress(false);\n          setSolution(\"\");\n        }, 2500);\n      }\n      else {\n        optionElement.classList.remove(\"glowing\");\n        setMessage(\"Du hast diese Aufgabe bereits gelöst.\");\n      }\n    }\n  }\n    };\n\n\n      return (\n<div className=\"game-container\">\n  <div className=\"level-bar\">\n    {Array.from({ length: 10 }, (_, index) => (\n      <div\n        key={index}\n        className={`level-indicator ${index === currentLevel ? 'current-level' : ''}`}\n        onClick={() => handleLevelClick(index)}\n      >\n        {index + 1}\n      </div>\n    ))}\n  </div>\n  <div className=\"button-container\">\n    <button type=\"button\" className=\"button\" onClick={openAsciiModal}>\n      ASCII Erklärung\n    </button>\n    <AsciiModal isOpen={asciiModalIsOpen} closeModal={closeAsciiModal} />\n    <button className=\"button\" onClick={openUnicodeModal}>\n      Unicode Erklärung\n    </button>\n    <UnicodeModal isOpen={unicodeModalIsOpen} closeModal={closeUnicodeModal} />\n  </div>\n  <div className=\"task-container\">\n    <div className=\"task-progress\">\n      {Array.from({ length: tasks[currentLevel].length }, (_, index) => (\n        <div\n          key={index}\n          className={`task-indicator ${index === currentTaskIndex ? 'current-task' : ''}`}\n          onClick={() => handleTaskClick(index)}\n        >\n          {index + 1}\n        </div>\n      ))}\n    </div>\n    <div className={`score-container ${scoreAnimation ? 'score-animation' : ''}`}>\n      <span className=\"score-text\">Punktestand:</span>\n      <span className=\"score-value\">{score}</span>\n    </div>\n  </div>\n\n  <div className=\"task-container\">\n      <div className=\"task-text\">\n        <TaskScroll taskText={tasks[currentLevel][currentTaskIndex].question} />\n        {tasks[currentLevel][currentTaskIndex].type === 'multipleChoice' && (\n          <div className=\"options-container\">\n            {Object.entries(tasks[currentLevel][currentTaskIndex].options).map(([key, value]) => (\n              <div key={key} id={key} className=\"option\" onClick={() => handleOptionClick(key)}>\n                {`${key}) ${value}`}\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n    {tasks[currentLevel][currentTaskIndex].type === 'input' && (\n      <div>\n        <input\n          type=\"text\"\n          className=\"input-field\"\n          value={solution}\n          onChange={(e) => setSolution(e.target.value)}\n        />\n        <button className=\"buttonSubmit\" onClick={handleSubmit}>\n          Antwort bestätigen\n        </button>\n      </div>\n    )}\n          {message && (\n              <div className=\"popup-game\">\n                <div className=\"popup-game-content\">\n                  <h2>{message}</h2>\n                  <button className=\"button\" onClick={() => setMessage(\"\")}>Schließen</button>\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n      )\n          }    \n    \nexport default GameScreen;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}